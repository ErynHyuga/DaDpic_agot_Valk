namespace = mz_dynasty

namespace = mz_religious

namespace = mz_religious_special

namespace = mz_mongol_empire

namespace = mz_adopt_child

## Establish Matriarchal Dynasty
mz_dynasty.0001 = {
	type = character_event
	title = mz_dynasty.0001.t
	desc = mz_dynasty.0001.desc
	theme = family
	left_portrait = {
		character = root
		animation = war_over_win 
	}

	immediate = {
		mz_establish_matriarchal_dynasty_decision_effects = yes
		custom_tooltip = mz_dynasty_renown_gain_effect_desc
		play_music_cue = "mx_cue_epic_sacral_moment"
	}

	option = {
		name = mz_dynasty.0001.a
		if = {
			limit = {
				NOR = {
					has_realm_law = female_preference_law
					has_realm_law = female_only_law
				}				
			}
			add_realm_law_skip_effects = female_preference_law
		}
		ai_chance = { base = 100 }
	}

	after = {
		hidden_effect = {
			dynasty = {
				every_dynasty_member = {
					every_vassal_or_below = {
						limit = {
							NOT = { this = root }
							is_female = yes
							dynasty = root.dynasty
							NOR = {
								has_realm_law = female_preference_law
								has_realm_law = female_only_law
							}
						}
						send_interface_toast = {
							title = mz_dynasty.0001.b.toast
							left_icon = root
							add_realm_law_skip_effects = female_preference_law
						}
					}
				}
			}
		}
	}
}

## Hidden Event: Recruit Amazon Champions
mz_dynasty.0010 = {
	hidden = yes

	trigger = { exists = var:mz_number_of_amazon_champions_countdown }

	immediate = {
		save_temporary_scope_as = mz_host

		#Set up a list of provinces, one per duchy in the realm, find all relevant pool characters there
		every_realm_province = {
			if = {
				limit = {
					save_temporary_scope_as = mz_potential_province
					NOT = {
						any_in_list = {
							list = mz_pool_provinces
							county.duchy = scope:mz_potential_province.county.duchy
						}
					}
				}
				add_to_temporary_list = mz_pool_provinces
			}
		}

		every_in_list = {
			list = mz_pool_provinces
			save_temporary_scope_as = pool_province

			every_pool_character = {
				province = scope:pool_province
				limit = {
					mz_amazon_champion_candidate_trigger = { HOST = root }
				}
				add_to_temporary_list = mz_potential_recruits
			}
		}

		#Randomize a good knight from the realm pool characters
		random_in_list = {
			list = mz_potential_recruits
			limit = { is_alive = yes }
			weight = {
				base = 1
				modifier = {
					add = {
						value = prowess
						subtract = decent_skill_rating
						multiply = 5
					}
				}
			}
			save_scope_as = mz_amazon_warrior
			if = {
				limit = { martial < very_high_skill_rating }
				add_martial_skill = 5
			}
			if = {
				limit = { prowess < very_high_skill_rating }
				add_prowess_skill = 5
			}
		}

		#If no one was found, make one
		if = {
			limit = { NOT = { exists = scope:mz_amazon_warrior } }

			create_character = {
				template = mz_amazon_woman
				employer = root
				save_scope_as = mz_amazon_warrior
			}
			scope:mz_amazon_warrior = { add_character_flag = mz_created_amazon } # Temporary, used to track how often we need to spawn an Amazon rather than grabbing one
		}

		#Add champion to court
		if = {
			limit = { exists = scope:mz_amazon_warrior }
			scope:mz_amazon_warrior = {
				force_character_skill_recalculation = yes
				add_character_flag = {
					flag = blocked_from_leaving
					years = 25
				}
			}
			if = {
				limit = {
					scope:mz_amazon_warrior = {
						NOT = {	is_courtier_of = root }
					}
				}
				add_courtier = scope:mz_amazon_warrior
			}
		}
		send_interface_message = {
			title = mz_dynasty.0010.t
			desc = mz_dynasty.0010.desc
			type = event_prowess_good_desc
			left_icon = scope:mz_amazon_warrior
		}

		#Count down the number of extra champions and either end the chain or resend this event
		change_variable = {
			name = mz_number_of_amazon_champions_countdown
			subtract = 1
		}

		if = {
			limit = { var:mz_number_of_amazon_champions_countdown = 0 }
			remove_variable = mz_number_of_amazon_champions_countdown
		}
		else = {
			clear_saved_scope = mz_amazon_warrior
			trigger_event = {
				id = mz_dynasty.0010
				days = { 100 200 }
			}
		}
	}	
}

## Challenge Spiritual Head of Faith for Gender Equality
mz_religious_special.1001 = { # Preparation
	type = character_event
	title = mz_religious_special.1001.t
	desc = mz_religious_special.1001.desc
	theme = faith
	right_portrait = scope:portrait
	left_portrait = {
		character = root
		animation = personality_rational
	}

	immediate = {
		faith.religious_head = {
			save_scope_as = pope
			save_scope_as = portrait #For portrait
		}
	}
	option = {
		name = mz_religious_special.1001.a
		custom_tooltip = mz_religious_special.1001.a.tt
		trigger_event = { 
			id = mz_religious_special.1002
			days = 7
		}
		faith.religious_head = { add_character_flag = had_mz_religious_special_this_lifetime }
		add_piety = -1000
	}
	option = {
		name = mz_religious_special.1001.b
		custom_tooltip = mz_religious_special.1001.b.tt
		remove_decision_cooldown = mz_spiritual_hof_change_to_equal_genderview_decision
	}
}

mz_religious_special.1002 = {
	type = character_event
	title = mz_religious_special.1002.t
	desc = mz_religious_special.1002.desc
	theme = faith
	right_portrait = scope:portrait
	left_portrait = {
		character = root
		animation = personality_zealous
	}
	option = { #Learning debate
		name = mz_religious_special.1002.a
		custom_tooltip = mz_religious_special.1002.a.tt
		duel = {
			skill = learning
			target = scope:pope
			10 = {
				desc = mz_religious_special.1002.a.success
				compare_modifier = {
					value = scope:duel_value
				}
				opinion_modifier = {
					who = scope:pope
					opinion_target = root
					multiplier = 0.25
				}
				modifier = {
					OR = {
						has_trait = scholar
						has_trait = theologian
					}
					add = 20
				}
				show_as_tooltip = {
					mz_spiritual_hof_change_gender_view_effect = yes
				}
				trigger_event = mz_religious_special.1003
			}
			20 = {
				desc = mz_religious_special.1002.a.failure
				send_interface_toast = {
					title = mz_religious_special.1002.a.failure.toast
					left_icon = faith.religious_head
					add_piety = major_piety_loss
					scope:pope = {
						add_opinion = {
							modifier = respect_opinion
							target = root
							opinion = -50
						}
					}
					stress_impact = { 
						base = medium_stress_impact_gain 
						zealous = major_stress_impact_gain
					}
				}
			}
		}
	}
	option = { #Diplomatic option
		name = mz_religious_special.1002.b
		custom_tooltip = mz_religious_special.1002.a.tt
		trigger = { diplomacy >= high_skill_rating }
		skill = diplomacy
		duel = {
			skill = diplomacy
			value = extremely_high_skill_rating
			10 = {
				desc = mz_religious_special.1002.a.success
				compare_modifier = {
					value = scope:duel_value
				}
				opinion_modifier = {
					who = scope:pope
					opinion_target = root
					multiplier = 0.25
				}
				modifier = {
					OR = {
						has_trait = diplomat
						has_trait = august
					}
					add = 20
				}
				show_as_tooltip = {
					mz_spiritual_hof_change_gender_view_effect = yes
				}
				trigger_event = mz_religious_special.1004
			}
			20 = {
				desc = mz_religious_special.1002.a.failure
				send_interface_toast = {
					title = mz_religious_special.1002.a.failure.toast
					left_icon = faith.religious_head
					add_piety = major_piety_loss
					scope:pope = {
						add_opinion = {
							modifier = respect_opinion
							target = root
							opinion = -50
						}
					}
					stress_impact = { 
						base = medium_stress_impact_gain 
						zealous = major_stress_impact_gain
					}
				}
			}
		}
	}
}

mz_religious_special.1003 = { #Learning Success
	type = character_event
	title = mz_religious_special.1003.t
	desc = mz_religious_special.1003.desc
	theme = faith
	left_portrait = scope:portrait
	immediate = {
		mz_spiritual_hof_change_gender_view_effect = yes
		play_music_cue = "mx_cue_epic_sacral_moment"
	}
	option = {
		name = mz_religious_special.1003.a
		add_realm_law_skip_effects = equal_law
	}
	after = {
		every_ruler = { # Allow other rulers to change gender law
			limit = {
				faith = root.faith
				highest_held_title_tier >= tier_county
				OR = { # Only tribal, feudal, and clan are affected
					has_government = tribal_government
					has_government = feudal_government
					has_government = clan_government
				}
				NOT = { this = root }
			}
			trigger_event = mz_religious_special.2011 #Send event to all other rulers of the faith
		}
	}
}

mz_religious_special.1004 = { #Diplomatic Success
	type = character_event
	title = mz_religious_special.1004.t
	desc = mz_religious_special.1004.desc
	theme = faith
	left_portrait = scope:portrait
	immediate = {
		mz_spiritual_hof_change_gender_view_effect = yes
		play_music_cue = "mx_cue_epic_sacral_moment"
	}
	option = {
		name = mz_religious_special.1004.a
		add_realm_law_skip_effects = equal_law
	}
	after = {
		every_ruler = { # Allow other rulers to change gender law
			limit = {
				faith = root.faith
				highest_held_title_tier >= tier_county
				OR = { # Only tribal, feudal, and clan are affected
					has_government = tribal_government
					has_government = feudal_government
					has_government = clan_government
				}
				NOT = { this = root }
			}
			trigger_event = mz_religious_special.2011 #Send event to all other rulers of the faith
		}
	}
}

## Call Convocation for Equality
mz_religious_special.2001 = {
	type = character_event
	title = mz_religious_special.2001.t
	desc = mz_religious_special.2001.desc
	theme = faith
	right_portrait = scope:portrait
	left_portrait = {
		character = root
		animation = personality_rational
	}

	immediate = {
		cp:councillor_court_chaplain = {
			save_scope_as = chaplain
			save_scope_as = portrait #For portrait
		}
	}
	option = {
		name = mz_religious_special.2001.a
		custom_tooltip = mz_religious_special.2001.a.tt
		trigger_event = { 
			id = mz_religious_special.2002
			days = 14
		}
		root = { add_character_flag = had_mz_religious_special2_this_lifetime }
		add_piety = -1000
	}
	option = {
		name = mz_religious_special.2001.b
		custom_tooltip = mz_religious_special.2001.b.tt
		# remove_decision_cooldown = mz_spiritual_hof_change_to_equal_genderview_decision
	}
}

mz_religious_special.2002 = { #First Challenge
	type = character_event
	title = mz_religious_special.2002.t
	desc = mz_religious_special.2002.desc
	theme = faith
	left_portrait = {
		character = root
		animation = personality_zealous
	}

	option = {
		name = mz_religious_special.2002.a
		custom_tooltip = mz_religious_special.2002.a.tt
		trigger = {
			NOR = { 
				has_trait = theologian 
				has_trait = scholar
			}
		}
		duel = {
			skill = learning
			value = average_skill_rating
			50 = {
				desc = mz_religious_special.2002.a.good
				compare_modifier = {
					value = scope:duel_value
					multiplier = 5
				}
				modifier = {
					add = 10
					faith = { has_doctrine = doctrine_clerical_gender_either }
				}
				modifier = {
					add = 20
					faith = { has_doctrine = doctrine_clerical_gender_female_only }
				}
				trigger_event = mz_religious_special.2003
			}
			50 = {	
				desc = mz_religious_special.2002.a.bad
				compare_modifier = {
					value = scope:duel_value
					multiplier = -5
				}
				min = 10
				trigger_event = mz_religious_special.2004
			}
		}
	}
	option = {
		name = mz_religious_special.2002.b
		custom_tooltip = mz_religious_special.2002.b.tt
		trigger = { has_trait = theologian }
		trait = theologian
		trigger_event = mz_religious_special.2003
	}
	option = {
		name = mz_religious_special.2002.c
		custom_tooltip = mz_religious_special.2002.c.tt
		trigger = { has_trait = scholar }
		trait = scholar
		trigger_event = mz_religious_special.2003
	}
}

mz_religious_special.2003 = { #First success, second challenge
	type = character_event
	title = mz_religious_special.2003.t
	desc = mz_religious_special.2003.desc
	theme = faith
	left_portrait = {
		character = root
		animation = happy
	}

	option = {
		name = mz_religious_special.2003.a
		custom_tooltip = mz_religious_special.2003.a.tt
		trigger = {
			NOR = { 
				has_trait = administrator 
				has_trait = overseer
			}
		}
		duel = {
			skill = stewardship
			value = average_skill_rating
			50 = {
				desc = mz_religious_special.2003.a.good
				compare_modifier = {
					value = scope:duel_value
					multiplier = 5
				}
				modifier = {
					add = 10
					faith = { has_doctrine = doctrine_clerical_gender_either }
				}
				modifier = {
					add = 20
					faith = { has_doctrine = doctrine_clerical_gender_female_only }
				}
				trigger_event = mz_religious_special.2009
			}
			50 = {	
				desc = mz_religious_special.2003.bad
				compare_modifier = {
					value = scope:duel_value
					multiplier = -5
				}
				min = 10
				trigger_event = mz_religious_special.2005
			}
		}
	}
	option = {
		name = mz_religious_special.2003.b
		custom_tooltip = mz_religious_special.2003.b.tt
		trigger = {
			NOR = { 
				has_trait = administrator 
				has_trait = overseer
			}
		}
		duel = {
			skill = martial
			value = average_skill_rating
			50 = {
				desc = mz_religious_special.2003.good
				compare_modifier = {
					value = scope:duel_value
					multiplier = 5
				}
				modifier = {
					add = 10
					faith = { has_doctrine = doctrine_clerical_gender_either }
				}
				modifier = {
					add = 20
					faith = { has_doctrine = doctrine_clerical_gender_female_only }
				}
				trigger_event = mz_religious_special.2009
			}
			50 = {	
				desc = mz_religious_special.2003.bad
				compare_modifier = {
					value = scope:duel_value
					multiplier = -5
				}
				min = 10
				trigger_event = mz_religious_special.2005
			}
		}
	}
	option = {
		name = mz_religious_special.2002.c
		custom_tooltip = mz_religious_special.2003.c.tt
		trigger = { has_trait = administrator }
		trait = administrator
		trigger_event = mz_religious_special.2009
	}
	option = {
		name = mz_religious_special.2002.d
		custom_tooltip = mz_religious_special.2003.d.tt
		trigger = { has_trait = overseer }
		trait = overseer
		trigger_event = mz_religious_special.2009
	}
}

mz_religious_special.2004 = { #First failure, second challenge
	type = character_event
	title = mz_religious_special.2004.t
	desc = mz_religious_special.2004.desc
	theme = faith
	left_portrait = {
		character = root
		animation = worry
	}

	option = {
		name = mz_religious_special.2004.a
		custom_tooltip = mz_religious_special.2004.a.tt
		trigger = { 
			NOT = { has_trait = torturer }
		}
		duel = {
			skill = prowess
			value = average_skill_rating
			15 = {
				desc = mz_religious_special.2004.a.good
				compare_modifier = {
					value = scope:duel_value
					multiplier = 0.5
					min = -14
				}
				add_prestige = minor_prestige_gain
				trigger_event = mz_religious_special.2006
			}
			10 = {	
				desc = mz_religious_special.2004.a.bad
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
					min = -9
				}
				send_interface_toast = {
					title = mz_religious_special.2004.a.bad
					left_icon = root
					increase_wounds_effect = { REASON = fight }
				}
				trigger_event = mz_religious_special.2010
			}
		}
		stress_impact = { craven = major_stress_impact_gain }
	}
	option = {
		name = mz_religious_special.2004.b
		custom_tooltip = mz_religious_special.2004.b.tt
		trigger = {
			NOT = { has_trait = torturer }
		}
		duel = {
			skill = intrigue
			value = average_skill_rating
			50 = {
				desc = mz_religious_special.2004.b.good
				compare_modifier = {
					value = scope:duel_value
					multiplier = 5
				}
				trigger_event = mz_religious_special.2006
			}
			50 = {	
				desc = mz_religious_special.2004.b.bad
				compare_modifier = {
					value = scope:duel_value
					multiplier = -5
				}
				min = 10
				trigger_event = mz_religious_special.2010
			}
		}
	}
	option = {
		name = mz_religious_special.2004.c
		custom_tooltip = mz_religious_special.2004.c.tt
		trigger = { has_trait = torturer }
		trait = torturer
		trigger_event = mz_religious_special.2006
	}
}

mz_religious_special.2005 = { # One success, one failure, last chance
	type = character_event
	title = mz_religious_special.2005.t
	desc = mz_religious_special.2005.desc
	theme = faith
	right_portrait = { 
		character = scope:portrait
		animation = stress
	}
	left_portrait = {
		character = root
		animation = personality_zealous
	}

	option = {
		name = mz_religious_special.2005.a
		custom_tooltip = mz_religious_special.2005.a.tt
		trigger = { 
			NOT = { has_trait = diplomat } 
		}
		duel = {
			skill = learning
			target = scope:chaplain
			10 = {
				desc = mz_religious_special.2005.a.good
				compare_modifier = {
					value = scope:duel_value
				}
				opinion_modifier = {
					who = scope:chaplain
					opinion_target = root
					multiplier = 0.25
				}
				modifier = {
					add = 10
					faith = { has_doctrine = doctrine_clerical_gender_either }
				}
				modifier = {
					add = 20
					faith = { has_doctrine = doctrine_clerical_gender_female_only }
				}
				modifier = {
					add = 5
					scope:chaplain = { is_female = yes }
				}
				trigger_event = mz_religious_special.2009
			}
			15 = {	
				desc = mz_religious_special.2005.a.bad
				compare_modifier = {
					value = scope:duel_value
				}
				min = 10
				trigger_event = mz_religious_special.2010
			}
		}
	}
	option = {
		name = mz_religious_special.2005.b
		custom_tooltip = mz_religious_special.2005.b.tt
		trigger = { 
			diplomacy >= high_skill_rating
			NOT = { has_trait = diplomat }
		}
		duel = {
			skill = diplomacy
			value = very_high_skill_rating
			50 = {
				desc = mz_religious_special.2005.b.good
				compare_modifier = {
					value = scope:duel_value
				}
				opinion_modifier = {
					who = scope:chaplain
					opinion_target = root
					multiplier = 0.25
				}
				modifier = {
					add = 10
					faith = { has_doctrine = doctrine_clerical_gender_either }
				}
				modifier = {
					add = 20
					faith = { has_doctrine = doctrine_clerical_gender_female_only }
				}
				modifier = {
					add = 5
					scope:chaplain = { is_female = yes }
				}
				trigger_event = mz_religious_special.2009
			}
			50 = {	
				desc = mz_religious_special.2005.b.bad
				compare_modifier = {
					value = scope:duel_value
					multiplier = -5
				}
				min = 10
				trigger_event = mz_religious_special.2010
			}
		}
	}
	option = {
		name = mz_religious_special.2005.c
		custom_tooltip = mz_religious_special.2005.c.tt
		trigger = { has_trait = diplomat }
		trait = diplomat
		trigger_event = mz_religious_special.2009
	}
} 

mz_religious_special.2006 = { # One failure, one success, last chance
	type = character_event
	title = mz_religious_special.2006.t
	desc = mz_religious_special.2006.desc
	theme = faith
	right_portrait = { 
		character = scope:portrait
		animation = stress
	}
	left_portrait = {
		character = root
		animation = personality_zealous
	}

	option = {
		name = mz_religious_special.2006.a
		custom_tooltip = mz_religious_special.2006.a.tt
		trigger = { 
			NOT = { has_trait = diplomat } 
		}
		duel = {
			skill = learning
			target = scope:chaplain
			20 = {
				desc = mz_religious_special.2006.a.good
				compare_modifier = {
					value = scope:duel_value
				}
				opinion_modifier = {
					who = scope:chaplain
					opinion_target = root
					multiplier = 0.25
				}
				modifier = {
					add = 10
					faith = { has_doctrine = doctrine_clerical_gender_either }
				}
				modifier = {
					add = 20
					faith = { has_doctrine = doctrine_clerical_gender_female_only }
				}
				modifier = {
					add = 5
					scope:chaplain = { is_female = yes }
				}
				trigger_event = mz_religious_special.2009
			}
			10 = {	
				desc = mz_religious_special.2006.a.bad
				compare_modifier = {
					value = scope:duel_value
				}
				min = 10
				trigger_event = mz_religious_special.2010
			}
		}
	}
	option = {
		name = mz_religious_special.2006.b
		custom_tooltip = mz_religious_special.2006.b.tt
		trigger = { 
			diplomacy >= high_skill_rating
			NOT = { has_trait = diplomat }
		}
		duel = {
			skill = diplomacy
			value = very_high_skill_rating
			50 = {
				desc = mz_religious_special.2006.b.good
				compare_modifier = {
					value = scope:duel_value
				}
				opinion_modifier = {
					who = scope:chaplain
					opinion_target = root
					multiplier = 0.25
				}
				modifier = {
					add = 10
					faith = { has_doctrine = doctrine_clerical_gender_either }
				}
				modifier = {
					add = 20
					faith = { has_doctrine = doctrine_clerical_gender_female_only }
				}
				modifier = {
					add = 5
					scope:chaplain = { is_female = yes }
				}
				trigger_event = mz_religious_special.2009
			}
			50 = {	
				desc = mz_religious_special.2006.b.bad
				compare_modifier = {
					value = scope:duel_value
					multiplier = -5
				}
				min = 10
				trigger_event = mz_religious_special.2010
			}
		}
	}
	option = {
		name = mz_religious_special.2006.c
		custom_tooltip = mz_religious_special.2006.c.tt
		trigger = { has_trait = diplomat }
		trait = diplomat
		trigger_event = mz_religious_special.2009
	}
}

mz_religious_special.2009 = { # Success
	type = character_event
	title = mz_religious_special.2009.t
	desc = mz_religious_special.2009.desc
	theme = faith
	right_portrait = { 
		character = scope:portrait
		animation = happy
	}
	left_portrait = {
		character = root
		animation = war_over_win
	}

	immediate = {
		mz_convocation_change_doctrine_effect = yes
		play_music_cue = "mx_cue_epic_sacral_moment"
	}
	option = {
		name = mz_religious_special.2009.a
		add_realm_law_skip_effects = equal_law
	}
	after = {
		every_ruler = { # Allow other rulers to change gender law
			limit = {
				faith = root.faith
				highest_held_title_tier >= tier_county
				OR = { # Only tribal, feudal, and clan are affected
					has_government = tribal_government
					has_government = feudal_government
					has_government = clan_government
				}
				NOT = { this = root }
			}
			trigger_event = mz_religious_special.2011 #Send event to all other rulers of the faith
		}
	}
}

mz_religious_special.2010 = { # Failure
	type = character_event
	title = mz_religious_special.2010.t
	desc = mz_religious_special.2010.desc
	theme = faith
	right_portrait = {
		character = scope:portrait
		animation = shame
	}
	left_portrait = {
		character = root
		animation = shame
	}

	immediate = {
		add_character_modifier = {
			modifier = mz_failed_convocation_modifier
			years = 20
		}
		scope:chaplain = {
			add_opinion = {
				modifier = respect_opinion
				target = root
				opinion = -20
			}
		}
	}
	option = {
		name = mz_religious_special.2010.a
		stress_impact = { 
			base = medium_stress_impact_gain 
			zealous = major_stress_impact_gain
		}
	}
}

mz_religious_special.2011 = { # Chained event to 2010
	type = character_event
	title = mz_religious_special.2011.t
	desc = mz_religious_special.2011.desc
	theme = faith
	override_background = { reference = throne_room }
	left_portrait = {
		character = root
		animation = personality_rational
	}
	option = {
		name = mz_religious_special.2011.a
		add_realm_law_skip_effects = equal_law
		ai_chance = {
			base = 0
			modifier = {
				is_female = yes
				OR = {
					has_realm_law = male_only_law
					has_realm_law = male_preference_law
				}
				add = 100
			}
		}
	}
	option = {
		name = mz_religious_special.2011.b
		custom_tooltip = mz_religious_special.2011.b.tt
		ai_chance = {
			base = 1
			modifier = {
				is_female = no
				OR = {
					has_realm_law = male_only_law
					has_realm_law = male_preference_law
				}
				add = 99
			}
			modifier = {
				is_female = no
				has_trait = zealous
				factor = 0 # Zealous men place divine authority over their own
			}
		}
	}
}

## Chain of Events to Reform Amazon faith
mz_religious_special.3001 = {
	type = character_event
	title = mz_religious_special.3001.t
	desc = mz_religious_special.3001.desc
	theme = faith
	right_portrait = {
		character = root
		animation = personality_rational
	}
	override_background = { reference = study }

	trigger = {
		faith:mz_amazon_pagan = { has_doctrine = doctrine_no_head }
	}
	on_trigger_fail = { trigger_event = mz_religious_special.3002 } # Fail safe
	
	immediate = { play_music_cue = mx_cue_pilgrimage_arrival }
	#immediate = { play_music_cue = mx_cue_temple }

	option = {
		name = mz_religious_special.3001.a
		trigger = { 
			faith:mz_amazon_pagan = { 
				NOT = { has_doctrine = doctrine_spiritual_head }
				has_doctrine = doctrine_no_head
			}
		}
		hidden_effect = { 
			faith:mz_amazon_pagan = { remove_doctrine = doctrine_no_head }
		}
		faith:mz_amazon_pagan = { add_doctrine = doctrine_spiritual_head }
		hidden_effect = {
			root = {
				set_up_dynamic_spiritual_hof_title_effect = { CREATOR = root }
			}
		}
		faith:mz_amazon_pagan = { 
			change_fervor = {
				value = -20
				desc = fervour_loss_temporal_meddling
			}
		}
	}

	option = {
		name = mz_religious_special.3001.b
		trigger = { 
			faith:mz_amazon_pagan = { 
				NOT = { has_doctrine = doctrine_temporal_head }
				has_doctrine = doctrine_no_head
				has_doctrine = doctrine_theocracy_temporal
			}
		}
		hidden_effect = { 
			faith:mz_amazon_pagan = { remove_doctrine = doctrine_theocracy_temporal }
			faith:mz_amazon_pagan = { remove_doctrine = doctrine_no_head }
		}
		faith:mz_amazon_pagan = { add_doctrine = doctrine_temporal_head }
		faith:mz_amazon_pagan = { add_doctrine = doctrine_theocracy_lay_clergy }
		faith:mz_amazon_pagan = { 
			change_fervor = {
				value = -20
				desc = fervour_loss_temporal_meddling
			}
		}
	}

	option = {
		name = mz_religious_special.3001.c
		# Make no change, preserve no head
		add_piety = medium_piety_gain
	}

	after = {
		trigger_event = mz_religious_special.3002
	}
}

mz_religious_special.3002 = {
	type = character_event
	title = mz_religious_special.3002.t
	desc = mz_religious_special.3002.desc
	theme = faith
	right_portrait = {
		character = root
		animation = personality_honorable
	}
	override_background = { reference = temple }
	trigger = {
		faith:mz_amazon_pagan = { has_doctrine = tenet_adaptive }
		faith:mz_amazon_pagan = { has_doctrine = doctrine_pluralism_pluralistic }
	}
	on_trigger_fail = { trigger_event = mz_religious_special.3003 } # Fail safe

	#immediate = { play_music_cue = mx_cue_temple }
	
	option = { # Become Righteous + Armed Pilgrimages
		name = mz_religious_special.3002.a
		trigger = { 
			faith:mz_amazon_pagan = { 
				NOR = { 
					has_doctrine = tenet_armed_pilgrimages 
					has_doctrine = doctrine_pluralism_righteous
				}
				has_doctrine = tenet_adaptive
				has_doctrine = doctrine_pluralism_pluralistic
			}
		}
		hidden_effect = { 
			faith:mz_amazon_pagan = { remove_doctrine = tenet_adaptive }
			faith:mz_amazon_pagan = { remove_doctrine = doctrine_pluralism_pluralistic }
		}
		faith:mz_amazon_pagan = { add_doctrine = tenet_armed_pilgrimages }
		faith:mz_amazon_pagan = { add_doctrine = doctrine_pluralism_righteous }
		faith:mz_amazon_pagan = { 
			change_fervor = {
				value = -15
				desc = fervour_loss_temporal_meddling
			}
		}
	}

	option = { # Become Fundamentalist + Warmonger
		name = mz_religious_special.3002.b
		trigger = { 
			faith:mz_amazon_pagan = { 
				NOR = { 
					has_doctrine = tenet_warmonger 
					has_doctrine = doctrine_pluralism_fundamentalist
				}
				has_doctrine = tenet_adaptive
				has_doctrine = doctrine_pluralism_pluralistic
			}
		}
		hidden_effect = { 
			faith:mz_amazon_pagan = { remove_doctrine = tenet_adaptive }
			faith:mz_amazon_pagan = { remove_doctrine = doctrine_pluralism_pluralistic }
		}
		faith:mz_amazon_pagan = { add_doctrine = tenet_warmonger }
		faith:mz_amazon_pagan = { add_doctrine = doctrine_pluralism_fundamentalist }
		faith:mz_amazon_pagan = { 
			change_fervor = {
				value = -15
				desc = fervour_loss_temporal_meddling
			}
		}
	}	

	option = {
		name = mz_religious_special.3002.c
		# Make no change, preserve Adaptive + Pluralist
		add_piety = major_piety_gain
	}

	after = {
		trigger_event = mz_religious_special.3003
	}
}

mz_religious_special.3003 = {
	type = character_event
	title = mz_religious_special.3003.t
	desc = mz_religious_special.3003.desc
	theme = faith
	right_portrait = {
		character = root
		animation = personality_bold
	}
	override_background = { reference = garden }
	trigger = {
		faith:mz_amazon_pagan = { has_doctrine = tenet_esotericism }
	}
	on_trigger_fail = { # Fail safe
		if = {
			limit = {
				OR = {
					faith:mz_amazon_pagan = { has_doctrine = tenet_adaptive }
					faith:mz_amazon_pagan = { has_doctrine = tenet_esotericism }
				}
			}
			trigger_event = mz_religious_special.3004 # If we preserved either of the first two tenets we can change the third
		}
		else = {
			trigger_event = mz_religious_special.3005 # If we've already meddled a lot and changed two tenets, skip the third opportunity
		}
	}

	#immediate = { play_music_cue = mx_cue_temple }
	
	option = { # Embrace Carnal Exaltation
		name = mz_religious_special.3003.a
		trigger = { 
			faith:mz_amazon_pagan = { 
				NOT = { 
					has_doctrine = tenet_carnal_exaltation 
				}
				has_doctrine = tenet_esotericism
			}
		}
		hidden_effect = { 
			faith:mz_amazon_pagan = { remove_doctrine = tenet_esotericism }
		}
		faith:mz_amazon_pagan = { add_doctrine = tenet_carnal_exaltation }
		if = { # Special intervention: Unrestricted marriage unlocked
			limit = { 
				faith:mz_amazon_pagan = { has_doctrine = doctrine_consanguinity_aunt_nephew_and_uncle_niece }
			}
			hidden_effect = {
				faith:mz_amazon_pagan = { remove_doctrine = doctrine_consanguinity_aunt_nephew_and_uncle_niece }
			}
			faith:mz_amazon_pagan = { add_doctrine = doctrine_consanguinity_unrestricted }
		}
		faith:mz_amazon_pagan = { 
			change_fervor = {
				value = -15
				desc = fervour_loss_temporal_meddling
			}
		}
	}

	option = { # Embrace Sanctity of Nature
		name = mz_religious_special.3003.b
		trigger = { 
			faith:mz_amazon_pagan = { 
				NOT = { 
					has_doctrine = tenet_sanctity_of_nature 
				}
				has_doctrine = tenet_esotericism
			}
		}
		hidden_effect = { 
			faith:mz_amazon_pagan = { remove_doctrine = tenet_esotericism }
		}
		faith:mz_amazon_pagan = { add_doctrine = tenet_sanctity_of_nature }
		if = { # Special intervention: Witchcraft becomes virtuous
			limit = { 
				faith:mz_amazon_pagan = { has_doctrine = doctrine_witchcraft_accepted }
			}
			hidden_effect = {
				faith:mz_amazon_pagan = { remove_doctrine = doctrine_witchcraft_accepted }
			}
			faith:mz_amazon_pagan = { add_doctrine = doctrine_witchcraft_virtuous }
		}	
		faith:mz_amazon_pagan = { 
			change_fervor = {
				value = -15
				desc = fervour_loss_temporal_meddling
			}
		}
	}	

	option = { # Embrace Sacrificial Ceremonies
		name = mz_religious_special.3003.c
		trigger = { 
			faith:mz_amazon_pagan = { 
				NOT = { 
					has_doctrine = tenet_sacrificial_ceremonies 
				}
				has_doctrine = tenet_esotericism
			}
		}
		hidden_effect = { 
			faith:mz_amazon_pagan = { remove_doctrine = tenet_esotericism }
		}
		faith:mz_amazon_pagan = { add_doctrine = tenet_sacrificial_ceremonies }
		if = { # Special intervention: Kinslaying is accepted
			limit = { 
				faith:mz_amazon_pagan = { has_doctrine = doctrine_kinslaying_close_kin_crime }
			}
			hidden_effect = {
				faith:mz_amazon_pagan = { remove_doctrine = doctrine_kinslaying_close_kin_crime }
			}
			faith:mz_amazon_pagan = { add_doctrine = doctrine_kinslaying_accepted }
		}
		faith:mz_amazon_pagan = { 
			change_fervor = {
				value = -15
				desc = fervour_loss_temporal_meddling
			}
		}
	}

	option = {
		name = mz_religious_special.3003.d
		# Make no change, preserve Esotericism
		add_piety = major_piety_gain
	}

	after = {
		if = {
			limit = {
				OR = {
					faith:mz_amazon_pagan = { has_doctrine = tenet_adaptive }
					faith:mz_amazon_pagan = { has_doctrine = tenet_esotericism }
				}
			}
			trigger_event = mz_religious_special.3004 # If we preserved either of the first two tenets we can change the third
		}
		else = {
			trigger_event = mz_religious_special.3005 # If we've already meddled a lot and changed two tenets, skip the third opportunity
		}
	}
}

mz_religious_special.3004 = {
	type = character_event
	title = mz_religious_special.3004.t
	desc = mz_religious_special.3004.desc
	theme = faith
	right_portrait = {
		character = root
		animation = thinking
	}
	override_background = { reference = throne_room }
	trigger = {
		faith:mz_amazon_pagan = { has_doctrine = tenet_astrology }
		faith:mz_amazon_pagan = { has_doctrine = doctrine_clerical_function_recruitment }
	}
	on_trigger_fail = {
		if = { # We will use the current faith of the character for this.
			limit = {
				OR = {
					faith = { exists = var:mz_lesbian_revelation_variable } # Activated by lesbian revelation...
					faith = { has_doctrine_parameter = mz_lesbian_marriage_parameter } # ...or already having a lesbian marriage doctrine.
				}
			}
			trigger_event = mz_religious_special.3005
		}
		else = { trigger_event = mz_religious_special.3006 }
	}

	#immediate = { play_music_cue = mx_cue_temple }
	
	option = { # Embrace Communal Possessions + Alms
		name = mz_religious_special.3004.a
		trigger = { 
			faith:mz_amazon_pagan = { 
				NOR = { 
					has_doctrine = tenet_communal_possessions 
					has_doctrine = doctrine_clerical_function_alms_and_pacification
				}
				has_doctrine = tenet_astrology
				has_doctrine = doctrine_clerical_function_recruitment
			}
		}
		hidden_effect = { 
			faith:mz_amazon_pagan = { remove_doctrine = tenet_astrology }
			faith:mz_amazon_pagan = { remove_doctrine = doctrine_clerical_function_recruitment }
		}
		faith:mz_amazon_pagan = { add_doctrine = tenet_communal_possessions }
		faith:mz_amazon_pagan = { add_doctrine = doctrine_clerical_function_alms_and_pacification }
		faith:mz_amazon_pagan = { 
			change_fervor = {
				value = -15
				desc = fervour_loss_temporal_meddling
			}
		}
	}

	option = { # Embrace Unrelenting Faith + Control
		name = mz_religious_special.3004.b
		trigger = { 
			faith:mz_amazon_pagan = { 
				NOR = { 
					has_doctrine = tenet_unrelenting_faith 
					has_doctrine = doctrine_clerical_function_taxation
				}
				has_doctrine = tenet_astrology
				has_doctrine = doctrine_clerical_function_recruitment
			}
		}
		hidden_effect = { 
			faith:mz_amazon_pagan = { remove_doctrine = tenet_astrology }
			faith:mz_amazon_pagan = { remove_doctrine = doctrine_clerical_function_recruitment }
		}
		faith:mz_amazon_pagan = { add_doctrine = tenet_unrelenting_faith }
		faith:mz_amazon_pagan = { add_doctrine = doctrine_clerical_function_taxation }
		faith:mz_amazon_pagan = { 
			change_fervor = {
				value = -15
				desc = fervour_loss_temporal_meddling
			}
		}
	}	

	option = {
		name = mz_religious_special.3004.c
		# Make no change, preserve Astrology + Recruitment
		add_piety = major_piety_gain
	}

	after = {
		if = { # We will use the current faith of the character for this.
			limit = {
				OR = {
					faith = { exists = var:mz_lesbian_revelation_variable } # Activated by lesbian revelation...
					faith = { has_doctrine_parameter = mz_lesbian_marriage_parameter } # ...or already having a lesbian marriage doctrine.
				}
			}
			trigger_event = mz_religious_special.3005
		}
		else = { trigger_event = mz_religious_special.3006 }
	}
}

mz_religious_special.3005 = { # Special lesbian doctrine selection available with Lesbian Revelation
	type = character_event
	title = mz_religious_special.3005.t
	desc = mz_religious_special.3005.desc
	theme = faith
	right_portrait = {
		character = root
		animation = flirtation
	}
	override_background = { reference = bedchamber }
	trigger = {
		NOT = {
			faith:mz_amazon_pagan = { has_doctrine_parameter = mz_lesbian_marriage_parameter }
		}
		OR = {
			faith = { exists = var:mz_lesbian_revelation_variable } # Activated by lesbian revelation...
			faith = { has_doctrine_parameter = mz_lesbian_marriage_parameter } # ...or already having a lesbian marriage doctrine.
		}
	}
	on_trigger_fail = { # Fail safe
		trigger_event = mz_religious_special.3006 # Final Event, conversion and reform
	}

	#immediate = { play_music_cue = mx_cue_positive_effect }
	
	option = { # Lesbian Marriage
		name = mz_religious_special.3005.a
		faith:mz_amazon_pagan = { add_doctrine = mz_doctrine_lesbian_marriage }
	}

	option = { # Lesbian Divinity
		name = mz_religious_special.3005.b
		faith:mz_amazon_pagan = { add_doctrine = mz_doctrine_lesbian_divinity }
	}
	
	option = { # Sapphic Exaltation
		name = mz_religious_special.3005.c
		faith:mz_amazon_pagan = { add_doctrine = mz_doctrine_sapphic_exaltation }
	}	

	option = { # No lesbian doctrine
		name = mz_religious_special.3005.d
		custom_tooltip = mz_religious_special.3005.d_tt
	}

	after = {
		trigger_event = mz_religious_special.3006 # Final Event, conversion and reform
	}
}

mz_religious_special.3006 = { # This will close out the chain
	type = character_event
	title = mz_religious_special.3006.t
	desc = mz_religious_special.3006.desc
	theme = faith
	right_portrait = {
		character = root
		animation = personality_zealous
	}
	override_background = { reference = holy_site_generic }
	immediate = {
		play_music_cue = mx_cue_epic_sacral_moment
		if = {
			limit = { 
				faith:mz_amazon_pagan = { has_doctrine = unreformed_faith_doctrine }
			}
			faith:mz_amazon_pagan = { remove_doctrine = unreformed_faith_doctrine }
		}
	}
	
	option = { # No options, just finish
		name = mz_religious_special.3006.a
		if = { # If not mz_amazon_pagan, convert now.
			limit = { 
				NOT = { faith = faith:mz_amazon_pagan }
			}
			set_character_faith_with_conversion = faith:mz_amazon_pagan
		}
		if = {
			limit = { 
				faith:mz_amazon_pagan = { has_doctrine = doctrine_temporal_head }
			}
			hidden_effect = {
				root = {
					set_up_dynamic_temporal_hof_title_effect = { NEW_HOLDER = root }
				}
			}
		}
		if = {
			limit = {
				faith:mz_amazon_pagan = { has_doctrine = tenet_adaptive }
				faith:mz_amazon_pagan = { has_doctrine = tenet_astrology }
				faith:mz_amazon_pagan = { has_doctrine = tenet_esotericism }
			}
			add_character_modifier = mz_champion_of_hera # Gain powerful modifier if changed no tenets
		}
		else = { add_character_modifier = mz_friend_of_hera } # Otherwise gain a less powerful modifier
		hidden_effect = {
			every_sub_realm_county = {
				limit = { 
					culture = { mz_is_amazonian_culture = yes }
					NOT = { faith = faith:mz_amazon_pagan }
				}
				random = {
					chance = 50
					set_county_faith = faith:mz_amazon_pagan 
				}
			}
		}
	}
}

## Events relevant to Amazons versus Mongols
mz_mongol_empire.0001 = { # Declare War to Destroy the Mongol Empire
	type = character_event
	title = mz_mongol_empire.0001.t
	desc = mz_mongol_empire.0001.desc
	theme = war

	right_portrait = {
		character = title:e_mongol_empire.holder
		animation = war_attacker
	}
	override_background = { reference = terrain }


	immediate = {
		play_music_cue = "mx_cue_crusade_starts"
		add_character_flag = mz_challenging_mongol_empire
		hidden_effect = {
			start_war = {
				casus_belli = mz_destroy_mongol_empire_cb
				target = title:e_mongol_empire.holder
			}
		}
	}

	option = {
		name = mz_mongol_empire.0001.a
		show_as_tooltip = {
			start_war = {
				casus_belli = mz_destroy_mongol_empire_cb
				target = title:e_mongol_empire.holder
			}			
		}
	}
}

mz_mongol_empire.1000 = { # Victory over the Mongol Empire
	type = character_event
	title = mz_mongol_empire.1000.t
	desc = mz_mongol_empire.1000.desc
	theme = war

	right_portrait = {
		character = scope:defender
		animation = war_over_loss
	}
	override_background = { reference = terrain }


	immediate = {
		play_music_cue = mx_cue_positive_effect
		if = {
			limit = { has_character_flag = mz_challenging_mongol_empire }
			remove_character_flag = mz_challenging_mongol_empire
		}
		show_as_tooltip = { destroy_title = title:e_mongol_empire }
		if = {
			limit = { 
				OR = {
					has_title = title:k_mz_scythia
					has_title = title:e_mz_scythia
				}
			}
			title:k_mz_scythia = { save_scope_as = mz_amazon_title }
		}
		else_if = {
			limit = { 
				has_title = title:k_mz_themiscyra
				NOT = { has_title = title:e_mz_amazonia }
			}
			title:k_mz_themiscyra = { save_scope_as = mz_amazon_title }
		}
		else = { 
			title:e_mz_amazonia = { save_scope_as = mz_amazon_title } 
		}
	}

	option = {
		name = mz_mongol_empire.1000.a
		if = {
			limit = { exists = dynasty }
			dynasty = { add_dynasty_prestige = 2000 }
		}
		if = {
			limit = { has_dlc_feature = legends }
			send_interface_toast = {
				title = heroic_legend_seed_drop.t
				create_legend_seed = {
					type = heroic
					quality = illustrious
					chronicle = war_won_chronicle
					properties = {
						title = title:e_mongol_empire
						winner = scope:attacker
						loser = scope:defender
					}
				}
			}
		}
	}
}

scripted_effect mz_add_disputed_heritage_trait = {
	if = {
		limit = { has_trait = wild_oat }
		hidden_effect = { remove_trait = wild_oat }
	}
	if = {
		limit = { has_trait = bastard }
		hidden_effect = { remove_trait = bastard }
	}
	if = {
		limit = { has_trait = legitimized_bastard }
		hidden_effect = { remove_trait = legitimized_bastard }
	}
	if = {
		limit = { has_trait = child_of_concubine_female }
		hidden_effect = { remove_trait = child_of_concubine_female }
	}
	if = {
		limit = { has_trait = child_of_concubine_male }
		hidden_effect = { remove_trait = child_of_concubine_male }
	}
	if = {
		limit = {
			NOT = { has_trait = disputed_heritage } 
		}
		add_trait_force_tooltip = disputed_heritage
	}
}

## Adoption event
mz_adopt_child.0001 = {
	type = character_event
	title = mz_adopt_child.0001.t
	desc = {
		desc = mz_adopt_child.0001.desc_open
		triggered_desc = {
			trigger = { exists = scope:mz_child_1 }
			desc = mz_adopt_child.0001.desc_child_1
		}
		triggered_desc = {
			trigger = { exists = scope:mz_child_2 }
			desc = mz_adopt_child.0001.desc_child_2
		}
		triggered_desc = {
			trigger = { exists = scope:mz_child_3 }
			desc = mz_adopt_child.0001.desc_child_3
		}
	}
	theme = dynasty

	right_portrait = {
		character = root
		animation = personality_zealous
	}
	lower_left_portrait = scope:mz_child_1
	lower_center_portrait = scope:mz_child_3
	lower_right_portrait = scope:mz_child_2

	immediate = {
		top_liege = {
			every_courtier_or_guest = {
				limit = { mz_adoption_decision_trigger = yes }
				add_to_list = mz_orphan_children
			}
			every_courtier_away = {
				limit = { mz_adoption_decision_trigger = yes }
				add_to_list = mz_orphan_children						
			}
			every_vassal_or_below = {
				every_courtier_or_guest = {
					limit = { mz_adoption_decision_trigger = yes }
					add_to_list = mz_orphan_children
				}
				every_courtier_away = {
					limit = { mz_adoption_decision_trigger = yes }
					add_to_list = mz_orphan_children						
				}			
			}
			every_neighboring_and_across_water_top_liege_realm = {
				holder = {
					every_courtier_or_guest = {
						limit = { mz_adoption_decision_trigger = yes }
						add_to_list = mz_orphan_children
					}
					every_courtier_away = {
						limit = { mz_adoption_decision_trigger = yes }
						add_to_list = mz_orphan_children						
					}
					every_vassal_or_below = {
						every_courtier_or_guest = {
							limit = { mz_adoption_decision_trigger = yes }
							add_to_list = mz_orphan_children
						}
						every_courtier_away = {
							limit = { mz_adoption_decision_trigger = yes }
							add_to_list = mz_orphan_children						
						}				
					}
				}	
			}
		}

		if = {
			limit = { 
				trigger_if = {
					limit = { 
						OR = {
							has_realm_law = male_preference_law
							has_realm_law = male_only_law
						}
					}
					any_in_list = {
						list = mz_orphan_children
						is_female = no
					}
				}
				trigger_else_if = {
					limit = { 
						OR = {
							has_realm_law = female_preference_law
							has_realm_law = female_only_law
						}
					}
					any_in_list = {
						list = mz_orphan_children
						is_female = yes
					}					
				}
				trigger_else = {
					any_in_list = {
						list = mz_orphan_children
						count > 0
					}					
				}
			}
			if = {
				limit = {
					OR = {
						has_realm_law = male_preference_law
						has_realm_law = male_only_law
					}					
				}
				random_in_list = {
					list = mz_orphan_children
					limit = { is_female = no }
					weight = {
						base = 1
						modifier = {
							faith.religion = root.faith.religion
							add = 100
						}
						modifier = {
							culture = { has_same_culture_heritage = root.culture }
							add = 100
						}
					}
					save_scope_as = mz_child_2
				}
			}
			else_if = {
				limit = {
					OR = {
						has_realm_law = female_preference_law
						has_realm_law = female_only_law
					}					
				}
				random_in_list = {
					list = mz_orphan_children
					limit = { is_female = yes }
					weight = {
						base = 1
						modifier = {
							faith.religion = root.faith.religion
							add = 100
						}
						modifier = {
							culture = { has_same_culture_heritage = root.culture }
							add = 100
						}
					}
					save_scope_as = mz_child_2
				}
			}
			else = {
				random_in_list = {
					list = mz_orphan_children
					weight = {
						base = 1
						modifier = {
							faith.religion = root.faith.religion
							add = 100
						}
						modifier = {
							culture = { has_same_culture_heritage = root.culture }
							add = 100
						}
					}
					save_scope_as = mz_child_2
				}				
			}
		}

		if = {
			limit = { 
				OR = {
					is_ai = no
					NOT = { exists = scope:mz_child_2 }
				}
			}
			create_character = { # We create a new child if it's a player character or if it's an AI and they don't already have a choice
				location = root.capital_province
				template = mz_orphan_child
				save_scope_as = mz_child_1
			}
			hidden_effect = { add_visiting_courtier = scope:mz_child_1 }			
		}

		if = {
			limit = { 
				trigger_if = {
					limit = { 
						OR = {
							has_realm_law = male_preference_law
							has_realm_law = male_only_law
						}
					}
					any_in_list = {
						list = mz_orphan_children
						dynasty = root.dynasty
						is_female = no
						NOT = { this = scope:mz_child_2 }
					}
				}
				trigger_else_if = {
					limit = { 
						OR = {
							has_realm_law = female_preference_law
							has_realm_law = female_only_law
						}
					}
					any_in_list = {
						list = mz_orphan_children
						dynasty = root.dynasty
						is_female = yes
						NOT = { this = scope:mz_child_2 }
					}					
				}
				trigger_else = {
					any_in_list = {
						list = mz_orphan_children
						dynasty = root.dynasty
						NOT = { this = scope:mz_child_2 }
					}					
				}
			}
			if = {
				limit = {
					OR = {
						has_realm_law = male_preference_law
						has_realm_law = male_only_law
					}					
				}
				random_in_list = {
					list = mz_orphan_children
					limit = { 
						is_female = no 
						dynasty ?= root.dynasty
						NOT = { this = scope:mz_child_2 }
					}
					weight = {
						base = 100
						modifier = {
							faith.religion = root.faith.religion
							add = 100
						}
						modifier = {
							culture = { has_same_culture_heritage = root.culture }
							add = 100
						}
					}
					save_scope_as = mz_child_3
				}
			}
			else_if = {
				limit = {
					OR = {
						has_realm_law = female_preference_law
						has_realm_law = female_only_law
					}					
				}
				random_in_list = {
					list = mz_orphan_children
					limit = { 
						is_female = yes 
						dynasty ?= root.dynasty
						NOT = { this = scope:mz_child_2 }
					}
					weight = {
						base = 100
						modifier = {
							faith.religion = root.faith.religion
							add = 100
						}
						modifier = {
							culture = { has_same_culture_heritage = root.culture }
							add = 100
						}
					}
					save_scope_as = mz_child_3
				}
			}
			else = {
				random_in_list = {
					list = mz_orphan_children
					limit = { 
						dynasty ?= root.dynasty
						NOT = { this = scope:mz_child_2 }
					}
					weight = {
						base = 100
						modifier = {
							faith.religion = root.faith.religion
							add = 100
						}
						modifier = {
							culture = { has_same_culture_heritage = root.culture }
							add = 100
						}
					}
					save_scope_as = mz_child_3
				}				
			}
		}		


		if = { # If our dynasty is large enough, it's assumed we can find an orphan from some minor off-screen character
			limit = { 
				dynasty = { 
					any_dynasty_member = { count >= 20 }
				}
				exists = scope:mz_child_1
			}
			scope:mz_child_1 = { 
				hidden_effect = {
					set_house = root.house 
					mz_copy_dynastic_genetics = yes
				}
			}
		}
	}

	option = {
		name = mz_adopt_child.0001.a
		trigger = { exists = scope:mz_child_1 }
		if = {
			limit = {
				OR = {
					scope:mz_child_1 = { is_lowborn = yes }
					NOT = { dynasty = scope:mz_child_1.dynasty }
				}
			}
			scope:mz_child_1 = { mz_add_disputed_heritage_trait = yes }
		}
		if = {
			limit = {
				NOT = { scope:mz_child_1.house = root.house }
			}
			scope:mz_child_1 = { set_house = root.house }
		}
		
		if = {
			limit = { is_female = yes }
			scope:mz_child_1 = { set_mother = root }
		}
		else = {
			scope:mz_child_1 = { set_father = root }
		}
		hidden_effect = { 
			if = {
				limit = { 
					NOT = { 
						scope:mz_child_1 = { is_courtier_of = root }
					}
				}
				root = { add_courtier = scope:mz_child_1 }
			}
		}
	
		mz_adoption_cost_effect = { CHILD = scope:mz_child_1 }
		ai_chance = { base = 100 }
	}

	option = {
		name = mz_adopt_child.0001.b
		trigger = { exists = scope:mz_child_2 }
		if = {
			limit = {
				OR = {
					scope:mz_child_2 = { is_lowborn = yes }
					NOT = { dynasty = scope:mz_child_2.dynasty }
				}		
			}
			scope:mz_child_2 = { mz_add_disputed_heritage_trait = yes }
		}
		if = {
			limit = {
				NOT = { scope:mz_child_2.house = root.house }
			}
			scope:mz_child_2 = { set_house = root.house }
		}
		
		if = {
			limit = { is_female = yes }
			scope:mz_child_2 = { set_mother = root }
		}
		else = {
			scope:mz_child_2 = { set_father = root }
		}
		hidden_effect = { 
			if = {
				limit = { 
					NOT = { 
						scope:mz_child_2 = { is_courtier_of = root }
					}
				}
				root = { add_courtier = scope:mz_child_2 }
			}
		}

		mz_adoption_cost_effect = { CHILD = scope:mz_child_2 }
		ai_chance = { 
			base = 100
			modifier = {
				exists = scope:child_3 # Dynastic child would be better
				add = -100
			}
		}
	}

	option = {
		name = mz_adopt_child.0001.c
		trigger = { exists = scope:mz_child_3 }
		if = {
			limit = {
				OR = {
					scope:mz_child_3 = { is_lowborn = yes }
					NOT = { dynasty = scope:mz_child_3.dynasty }
				}			
			}
			scope:mz_child_3 = { mz_add_disputed_heritage_trait = yes }
		}
		if = {
			limit = {
				NOT = { scope:mz_child_3.house = root.house }
			}
			scope:mz_child_3 = { set_house = root.house }
		}
		
		if = {
			limit = { is_female = yes }
			scope:mz_child_3 = { set_mother = root }
		}
		else = {
			scope:mz_child_3 = { set_father = root }
		}
		hidden_effect = { 
			if = {
				limit = { 
					NOT = { 
						scope:mz_child_3 = { is_courtier_of = root }
					}
				}
				root = { add_courtier = scope:mz_child_3 }
			}
		}

		mz_adoption_cost_effect = { CHILD = scope:mz_child_3 }
		ai_chance = { base = 100 }
	}

	option = {
		name = mz_adopt_child.0001.d
		remove_decision_cooldown = mz_adopt_child_decision
		ai_chance = { base = 0 }
	}

	after = {
		if = {
			limit = { 
				exists = scope:mz_child_1
				NOT = { 
					scope:mz_child_1 = { 
						any_parent = { this = root }
					}
				}
			}
			hidden_effect = { 
				root = { remove_courtier_or_guest = scope:mz_child_1 }
			}
		}
	}
}