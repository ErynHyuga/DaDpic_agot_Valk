namespace = mz_childhood

### Childhood events
mz_childhood.0001 = { # Lesbian faith childhood sexuality event setup
	hidden = yes
	immediate = {
		root = { save_scope_as = mz_mother }
		random_child = {
			limit = {
				mz_lesbian_faith_devotee = yes
				is_imprisoned = no
				is_adult = no
				age >= 12
				NOT = { has_character_flag = mz_had_childhood_sexuality_event }
			}
			save_scope_as = mz_child
		}
		faith = { save_scope_as = mz_my_faith }

		if = {
			limit = {
				exists = scope:mz_mother
				exists = scope:mz_child
			}
			if = {
				limit = {
					OR = {
						scope:mz_mother = { is_available_adult = yes }
						AND = {
							scope:mz_mother = { 
								exists = location 
								is_imprisoned = no
								is_incapable = no
							}
							scope:mz_child = { # allowed if mother and child are at the same location when traveling
								exists = location
								location = scope:mz_mother.location
							}
						}
					}
					scope:mz_child = { 
						is_ai = yes
						is_imprisoned = no
						faith = scope:mz_my_faith
					}
				}
				scope:mz_mother = { trigger_event = mz_childhood.2001 } # If child is AI, trigger event for mother
			}
			else_if = {
				limit = {
					scope:mz_mother = { 
						is_adult = yes
						is_imprisoned = no
					}
					scope:mz_child = { 
						is_ai = no
						is_imprisoned = no
						faith = scope:mz_my_faith
					}
				}
				scope:mz_child = { trigger_event = mz_childhood.2501 } # If child is not AI, trigger event for child
			}
			else = {
				trigger_event = { # Try again later, but the trigger in the on_action should block any infinite loops
					days = { 45 60 }
					on_action = mz_childhood_sexuality_event
				}
			}
		}
		else = {
			trigger_event = { # Try again later, but the trigger in the on_action should block any infinite loops
				days = { 45 60 }
				on_action = mz_childhood_sexuality_event
			}
		}
	}
}

mz_childhood.2001 = { #Mother Event
	type = character_event
	title = mz_childhood.2001.t
	desc = mz_childhood.2001.desc
	theme = family
	left_portrait = scope:mz_child
	override_background = { reference = study }

	trigger = { # Only if child is AI!
		scope:mz_child = { 
			is_ai = yes 
			OR = {
				has_sexuality = heterosexual
				has_sexuality = asexual
			}
			NOT = { has_character_flag = mz_had_childhood_sexuality_event }
		} 
	}

	immediate = {
		scope:mz_child = { 
			add_character_flag = {
				flag = mz_had_childhood_sexuality_event 
				years = 10
			}
		}
	}

	option = { #Attempt to educate the child
		name = mz_childhood.2001.a
		ai_chance = {
			base = 10
			modifier = {
				add = 40
				learning >= average_skill_rating
			}
			modifier = {
				add = 40
				piety_level > 1
			}
			modifier = {
				add = 40
				has_trait = zealous
			}
			modifier = {
				add = 40
				has_focus = learning_theology_focus
			}
		}
		duel = {
			skill = learning
			value = mediocre_skill_rating
			10 = {
				desc = mz_childhood.2001.success
				custom_tooltip = mz_childhood.2001.success_tt
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					max = 30
				}
				modifier = { #Devotion levels increase odds of success
					add = 5
					piety_level = 2
				}
				modifier = {
					add = 10
					piety_level = 3
				}
				modifier = {
					add = 15
					piety_level = 4
				}
				modifier = {
					add = 20
					piety_level >= 5
				}
				modifier = {
					add = 10
					has_focus = learning_theology_focus
				}
				modifier = {
					add = 5
					has_trait = zealous
				}
				modifier = {
					add = 5
					has_trait = patient
				}
				modifier = { #Pensive and curious children are more receptive
					add = 5
					scope:mz_child = { 
						OR = {
							has_trait = curious
							has_trait = pensive
						}
					}
				}
				modifier = {
					add = 5
					has_trait = education_learning
				}
				modifier = {
					factor = 1.5
					OR = {
						has_trait = intellect_good
						has_trait = shrewd
					}
				}
				hidden_effect = {
					mz_convert_change_sexual_orientation_effects = { CHARACTER = scope:mz_child }
				}
				save_scope_value_as = {
					name = mz_childhood_conversion
					value = flag:mz_yes
				}
			}
			10 = {
				desc = mz_childhood.2001.failure
				custom_tooltip = mz_childhood.2001.failure_tt
				min = 1
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = -10
				}
				modifier = { #Low devotion decreases odds of success
					add = 5
					piety_level = 1
				}
				modifier = {
					add = 10
					piety_level <= 0
				}
				modifier = {
					add = 5
					has_trait = cynical
				}
				modifier = {
					add = 5
					has_trait = impatient
				}
				modifier = { #Rowdy and bossy children are less receptive
					add = 5
					scope:mz_child = { 
						OR = {
							has_trait = rowdy
							has_trait = bossy
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						has_trait = intellect_bad
						has_trait = dull
					}
				}
				modifier = { #Impossible to fail if theologian or scholar
					factor = 0
					OR = {
						has_trait = theologian
						has_trait = scholar
					}
				}
				save_scope_value_as = {
					name = mz_childhood_conversion
					value = flag:mz_no
				}
			}
		}
	}
	option = { #Allow child to self-educate
		name = mz_childhood.2001.b
		ai_chance = {
			base = 10
			modifier = {
				add = 40
				learning < average_skill_rating
			}
			modifier = {
				add = 40
				piety_level <= 1
			}
			modifier = {
				add = 40
				has_trait = cynical
			}
			modifier = {
				factor = 0
				has_trait = theologian
			}
		}
		scope:mz_child = {
			duel = {
				skill = learning
				value = low_skill_rating
				10 = {
					desc = mz_childhood.2001.success
					custom_tooltip = mz_childhood.2001.success_tt
					compare_modifier = {
						value = scope:duel_value
						multiplier = 1
					}
					modifier = { #Pensive and curious children are more receptive
						add = 10
						scope:mz_child = { 
							OR = {
								has_trait = curious
								has_trait = pensive
							}
						}
					}
					modifier = {
						add = 20
						scope:mz_child = {
							OR = {
								has_trait = intellect_good
								has_trait = shrewd
							}
						}
					}
					hidden_effect = {
						mz_convert_change_sexual_orientation_effects = { CHARACTER = scope:mz_child }
					}
					save_scope_value_as = {
						name = mz_childhood_conversion
						value = flag:mz_yes
					}
				}
				10 = {
					desc = mz_childhood.2001.failure
					custom_tooltip = mz_childhood.2001.failure_tt
					min = 1
					compare_modifier = {
						value = scope:duel_value
						multiplier = -1
						min = -9
					}
					modifier = { #Rowdy and bossy children are less receptive
						add = 5
						scope:mz_child = { 
							OR = {
								has_trait = rowdy
								has_trait = bossy
							}
						}
					}
					modifier = {
						add = 10
						scope:mz_child = {
							OR = {
								has_trait = intellect_bad
								has_trait = dull
							}
						}
					}
					save_scope_value_as = {
						name = mz_childhood_conversion
						value = flag:mz_no
					}
				}
			}
		}
	}
	option = { #Do not educate
		name = mz_childhood.2001.c
		ai_chance = {
			base = 10 #AI rarely does this on its own unless lots of factors work for it
			modifier = { #But will always act if zealous or theologian
				factor = 0
				OR = { 
					has_trait = theologian
					has_trait = zealous
				}
			}
		}
		scope:mz_child = { 
			add_opinion = {
				modifier = disappointed_opinion
				target = root
				opinion = -10
			}
		}
	}
	after = {
		trigger_event = {
			id = mz_childhood.2002
			days = 2
		}
	}
}

mz_childhood.2002 = {
	hidden = yes
	trigger = {
		scope:mz_child = { 
			is_alive = yes 
			is_adult = no
		}
		scope:mz_mother = { is_alive = yes }
	}

	immediate = {
		if = { 
			limit = { exists = scope:mz_childhood_conversion }
			if = {
				limit = { scope:mz_childhood_conversion = flag:mz_yes }
				send_interface_toast = {
					title = mz_childhood.education_result_success
					left_icon = scope:mz_child
					if = {
						limit = { 
							scope:mz_child = { has_sexuality = homosexual }
						}
						custom_tooltip = mz_childhood.education_result_homosexual
					}
					else_if = {
						limit = { 
							scope:mz_child = { has_sexuality = bisexual }
						}
						custom_tooltip = mz_childhood.education_result_bisexual
					}
					reverse_add_opinion = {
						target = scope:mz_child
						modifier = respect_opinion
						opinion = 20
					}
				}
			}
			else_if = {
				limit = { scope:mz_childhood_conversion = flag:mz_no }
				send_interface_toast = {
					title = mz_childhood.education_result_failure
					left_icon = scope:mz_child
					reverse_add_opinion = {
						target = scope:mz_child
						modifier = respect_opinion
						opinion = -20
					}
				}
			}
		}
	}
}

mz_childhood.2501 = { #Child event (for non-AI children)
	type = character_event
	title = mz_childhood.2501.t
	desc = mz_childhood.2501.desc
	theme = family
	left_portrait = scope:mz_mother
	right_portrait = root
	override_background = { reference = study }

	trigger = { is_ai = no }

	immediate = {
		if = {
			limit = { 
				scope:mz_mother = { has_character_flag = is_naked }
			}
			scope:mz_mother = { remove_character_flag = is_naked }
		}
	}

	option = { # Choose to be homosexual
		name = mz_childhood.2501.a
		set_sexuality = homosexual
	}

	option = { # Choose to be homosexual
		trigger = { #Asexual children don't become bisexual via this event
			NOT = { has_sexuality = asexual }
		}
		name = mz_childhood.2501.b
		set_sexuality = bisexual
	}

	option = { # Do not change sexuality
		name = mz_childhood.2501.c
	}

	after = {
		scope:mz_child = { 
			add_character_flag = {
				flag = mz_had_childhood_sexuality_event 
				years = 10
			}
		}
	}
}

mz_childhood.5001 = {
	hidden = yes

	immediate = { mz_matriarchy_education_boost_master_effect = yes }
}