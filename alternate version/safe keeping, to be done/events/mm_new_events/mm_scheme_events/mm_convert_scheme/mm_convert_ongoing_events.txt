#Ongoing events for Convert scheme
namespace = mz_convert_ongoing

#Note: Right now "target" events only really need to define sending a response properly and trigger the "owner" event, as the AI will not try and convert players.

### Milestone 1 events
## Venue based events
# 1101 Outgoing venue selection
# 1102 Reserved venue selection
## Relations-based evens
# 5201 Convert a friend
# 5301 Convert family member
## Indirect methods
# 4001 The Book
# 4010 Fan Mail
## Direct approach
# 3001 Token of Affection (fallback)
## Skill-based
# 6001 Owner has high Intrigue
# 6050 Both witches - private rite

### Milestone 2 Events
## Venue based events
# 1001 At the Tavern
# 1010 Joint Study
# 1020 Walk in the Garden - married target
# 1030 Bathhouse interest
# 1040 At the ball - scandalous dance
## Direct approach
# 3050 Seduction (direct approach/fallback)
## Skill-based
# 6010 Both martial - Army camp
# 6020 Both prowess - Duel
# 6030 Both learning - Physician

## Outgoing setup
scripted_trigger mz_convert_outgoing_feast_likes_trigger = { # Likes/dislikes feasts
	OR = { 
		has_trait = lifestyle_reveler
		has_trait = drunkard
		has_trait = gregarious
		has_trait = comfort_eater
		has_trait = gluttonous
	}
}

scripted_trigger mz_convert_outgoing_feast_dislikes_trigger = {
	OR = { 
		has_trait = temperate
		has_trait = inappetetic
		has_trait = shy
	}
}

scripted_trigger mz_convert_outgoing_hunt_likes_trigger = { #Likes/dislikes hunts
	OR = {
		has_trait = lifestyle_hunter
		has_trait = athletic
		has_trait = witch
		any_secret = { secret_type = secret_witch }
	}
}

scripted_trigger mz_convert_outgoing_hunt_dislikes_trigger = {
	OR = {
		has_trait = compassionate
		has_trait = craven
		has_trait = paranoid
		has_trait = lazy
	}
}

scripted_trigger mz_convert_outgoing_spar_likes_trigger = { #Likes/dislikes sparring
	OR = {
		has_trait = shieldmaiden
		has_trait = lifestyle_blademaster
		has_trait = education_martial_prowess
		has_martial_lifestyle_trait_trigger = yes
		has_lifestyle = martial_lifestyle
	}
}

scripted_trigger mz_convert_outgoing_spar_dislikes_trigger = {
	OR = {
		has_trait = physique_bad
		has_trait = spindly
		has_trait = bleeder
		has_trait = craven
		has_trait = paranoid
	}
}

mz_convert_ongoing.1101 = { #Outgoing event - feast, hunt, or sparring?
	type = character_event
	title = mz_convert_ongoing.1101.t
	desc = mz_convert_ongoing.1101.desc
	
	theme = seduce_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		#target is outgoing
		scope:target = {
			OR = {
				mz_convert_outgoing_feast_likes_trigger = yes
				mz_convert_outgoing_hunt_likes_trigger = yes
				mz_convert_outgoing_spar_likes_trigger = yes
			}
		}
	}

	option = { #Mingle with target at feasts
		name = mz_convert_ongoing.venue_selection.feast
		custom_tooltip = mz_convert_ongoing.venue_selection.feast_tt
		save_scope_value_as = {
			name = venue
			value = flag:feast
		}
		stress_impact = { 
			lifestyle_reveler = minor_stress_loss
			gluttonous = minor_stress_loss
			drunkard = minor_stress_loss
			shy = minor_stress_gain
			temperate = minor_stress_gain
		}
		custom_tooltip = mz_convert_ongoing.venue_selection.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }
	}
	option = { #Mingle with target at hunts
		name = mz_convert_ongoing.venue_selection.hunt
		custom_tooltip = mz_convert_ongoing.venue_selection.hunt_tt
		save_scope_value_as = {
			name = venue
			value = flag:hunt
		}
		stress_impact = { 
			lifestyle_hunter = minor_stress_loss
			athletic = minor_stress_loss
			witch = minor_stress_loss
			lazy = minor_stress_gain
			paranoid = minor_stress_gain
			craven = minor_stress_gain
		}
		custom_tooltip = mz_convert_ongoing.venue_selection.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }
	}
	option = { #Mingle with target while sparring
		name = mz_convert_ongoing.venue_selection.spar
		custom_tooltip = mz_convert_ongoing.venue_selection.spar_tt
		save_scope_value_as = {
			name = venue
			value = flag:spar
		}
		stress_impact = { 
			lifestyle_blademaster = minor_stress_loss
			gallant = minor_stress_loss
			paranoid = minor_stress_gain
			craven = minor_stress_gain
		}
		custom_tooltip = mz_convert_ongoing.venue_selection.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }
	}
	option = { #don't mingle
		name = mz_convert_ongoing.venue_selection.decline
		custom_tooltip = mz_convert_ongoing.venue_selection.decline_tt
		stress_impact = { 
			shy = major_stress_loss
			impatient = minor_stress_gain
		}
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_1_event
				value = yes
			}
		}
	}
	after = {
		hidden_effect = {
			if = {
				limit = {
					exists = scope:venue
				}
				if = {
					limit = {
						scope:venue = flag:feast
					}
					random_list = {
						75 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_outgoing_feast_likes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1201 }
						}
						25 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_outgoing_feast_dislikes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1301 }
						}
					}
				}
				else_if = {
					limit = {
						scope:venue = flag:hunt
					}
					random_list = {
						75 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_outgoing_hunt_likes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1202 }
						}
						25 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_outgoing_hunt_dislikes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1302 }
						}
					}
				}
				else_if = {
					limit = {
						scope:venue = flag:spar
					}
					random_list = {
						75 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_outgoing_spar_likes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1203 }
						}
						25 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_outgoing_spar_dislikes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1303 }
						}
					}
				}
			}	
		}
	}
}

## Feast resolutions
# Target: Feast success (for now, not worrying too much about target events)
mz_convert_ongoing.1201 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner

	trigger = { exists = scope:scheme }
	
	option = {
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = {
			modifier = mz_convert_feasting_modifier
			years = 5
		}
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1401
				days = { 3 5 }
			}
		}
	}
}
# Target: Feast failure (for now, not worrying too much about target events)
mz_convert_ongoing.1301 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner
	
	trigger = { exists = scope:scheme }

	option = {
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1501
				days = { 3 5 }
			}
		}
	}
}
# Schemer: Feast success
mz_convert_ongoing.1401 = {
	type = character_event
	title = mz_convert_ongoing.1401.t
	desc = {
		desc = mz_convert_ongoing.1401.desc
		desc = mz_convert_ongoing.successful.owner
	}
	
	theme = seduce_scheme
	override_background = { reference = feast }
	left_portrait = {
		character = scope:owner
		animation = flirtation_left
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
	}

	trigger = { exists = scope:scheme }
	
	immediate = {
		add_character_modifier = {
			modifier = mz_convert_feasting_modifier
			years = 5
		}
	}

	option = {
		name = mz_convert_ongoing.owner_successful.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

# Schemer: Feast failure
mz_convert_ongoing.1501 = {
	type = character_event
	title = mz_convert_ongoing.1501.t
	desc = {
		desc = mz_convert_ongoing.1501.desc
		desc = mz_convert_ongoing.unsuccessful.owner
	}
	
	theme = seduce_scheme
	override_background = { reference = feast }
	left_portrait = {
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = boredom
	}

	trigger = { exists = scope:scheme }

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.owner_unsuccessful.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

## Hunt resolution
# Target: Hunt success
mz_convert_ongoing.1202 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner

	trigger = { exists = scope:scheme }
	
	option = {
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = {
			modifier = mz_convert_hunting_modifier
			years = 5
		}
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1402
				days = { 3 5 }
			}
		}
	}
}
# Target: Hunt failure
mz_convert_ongoing.1302 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner
	
	trigger = { exists = scope:scheme }

	option = {
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1502
				days = { 3 5 }
			}
		}
	}
}
# Schemer: Hunt success
mz_convert_ongoing.1402 = {
	type = character_event
	title = mz_convert_ongoing.1402.t
	desc = {
		desc = mz_convert_ongoing.1402.desc
		desc = mz_convert_ongoing.successful.owner
	}
	
	theme = seduce_scheme
	override_background = { reference = wilderness }
	left_portrait = {
		character = scope:owner
		animation = flirtation_left
	}
	right_portrait = { 
		character = scope:target
		animation = war_over_win
	}

	trigger = { exists = scope:scheme }
	
	immediate = {
		add_character_modifier = {
			modifier = mz_convert_hunting_modifier
			years = 5
		}
	}

	option = {
		name = mz_convert_ongoing.owner_successful.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

# Schemer: Hunt failure
mz_convert_ongoing.1502 = {
	type = character_event
	title = mz_convert_ongoing.1502.t
	desc = {
		desc = mz_convert_ongoing.1502.desc
		desc = mz_convert_ongoing.unsuccessful.owner
	}
	
	theme = seduce_scheme
	override_background = { reference = wilderness }
	left_portrait = {
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = disapproval
	}

	trigger = { exists = scope:scheme }

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.owner_unsuccessful.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

## Spar resolution
# Target: Spar success
mz_convert_ongoing.1203 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = scope:owner

	trigger = { exists = scope:scheme }
	
	option = {
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = {
			modifier = mz_convert_sparring_modifier
			years = 5
		}
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1403
				days = { 3 5 }
			}
		}
	}
}
# Target: Spar failure
mz_convert_ongoing.1303 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = scope:owner
	
	trigger = { exists = scope:scheme }

	option = {
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1503
				days = { 3 5 }
			}
		}
	}
}
# Schemer: Spar success
mz_convert_ongoing.1403 = {
	type = character_event
	title = mz_convert_ongoing.1403.t
	desc = {
		desc = mz_convert_ongoing.1403.desc
		desc = mz_convert_ongoing.successful.owner
	}

	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	
	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = {
		character = scope:owner
		animation = flirtation_left
	}
	right_portrait = { 
		character = scope:target
		animation = personality_bold
	}

	trigger = { exists = scope:scheme }
	
	immediate = {
		add_character_modifier = {
			modifier = mz_convert_sparring_modifier
			years = 5
		}
	}

	option = {
		name = mz_convert_ongoing.owner_successful.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

# Schemer: Spar failure
mz_convert_ongoing.1503 = {
	type = character_event
	title = mz_convert_ongoing.1503.t
	desc = {
		desc = mz_convert_ongoing.1503.desc
		desc = mz_convert_ongoing.unsuccessful.owner
	}

	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	
	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = {
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = pain
	}

	trigger = { exists = scope:scheme }

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.owner_unsuccessful.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

## Reserved setup: Reserved target - exchange letters, prayer, study
scripted_trigger mz_convert_reserved_letters_likes_trigger = { # Likes/dislikes letter exchanges
	OR = { 
		has_trait = shy
		has_trait = reclusive
		has_trait = content
		has_trait = chaste
	}
}
scripted_trigger mz_convert_reserved_letters_dislikes_trigger = {
	OR = { 
		has_trait = gregarious
		has_trait = lifestyle_reveler
		has_trait = impatient
		has_trait = arrogant
	}
}

scripted_trigger mz_convert_reserved_prayer_likes_trigger = { # Likes/dislikes prayer
	OR = { 
		has_trait = zealous
		has_trait = theologian
		has_trait = humble
	}
}
scripted_trigger mz_convert_reserved_prayer_dislikes_trigger = {
	OR = { 
		has_trait = cynical
		has_trait = arrogant
		has_trait = deceitful
	}
}

scripted_trigger mz_convert_reserved_study_likes_trigger = { # Likes/dislikes study
	OR = { 
		has_trait = patient
		has_trait = calm
		has_trait = shrewd
		has_trait = intellect_good
		has_learning_lifestyle_trait_trigger = yes
		has_lifestyle = learning_lifestyle
	}
}
scripted_trigger mz_convert_reserved_study_dislikes_trigger = {
	OR = { 
		has_trait = dull
		has_trait = intellect_bad
		has_trait = wrathful
		has_trait = impatient
	}
}

mz_convert_ongoing.1102 = { #Reserved event - excahnge letters, prayer, or study?
	type = character_event
	title = mz_convert_ongoing.1102.t
	desc = mz_convert_ongoing.1102.desc
	
	theme = seduce_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		#target is reserved
		scope:target = {
			OR = {
				mz_convert_reserved_letters_likes_trigger = yes
				mz_convert_reserved_study_likes_trigger = yes
				AND = {
					mz_convert_reserved_prayer_likes_trigger = yes
					faith = scope:owner.faith
				}
			}
		}
	}

	option = { #letters with target
		name = mz_convert_ongoing.venue_selection.letters
		custom_tooltip = mz_convert_ongoing.venue_selection.letters_tt
		save_scope_value_as = {
			name = venue
			value = flag:letters
		}
		stress_impact = { 
			reclusive = minor_stress_loss
			shy = minor_stress_loss
			humble = minor_stress_loss
			lustful = minor_stress_gain
			gregarious = minor_stress_gain
			impatient = minor_stress_gain
		}
		custom_tooltip = mz_convert_ongoing.venue_selection.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }
	}

	option = { #prayer with target
		trigger = { faith = scope:target.faith }
		name = mz_convert_ongoing.venue_selection.prayer
		custom_tooltip = mz_convert_ongoing.venue_selection.prayer_tt
		save_scope_value_as = {
			name = venue
			value = flag:prayer
		}
		stress_impact = { 
			zealous = minor_stress_loss
			humble = minor_stress_loss
			theologian = minor_stress_loss
			cynical = minor_stress_gain
			impatient = minor_stress_gain
		}
		custom_tooltip = mz_convert_ongoing.venue_selection.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }
	}
	
	option = { #study with target
		name = mz_convert_ongoing.venue_selection.study
		custom_tooltip = mz_convert_ongoing.venue_selection.study_tt
		save_scope_value_as = {
			name = venue
			value = flag:study
		}
		stress_impact = { 
			intellect_good_1 = minor_stress_loss
			intellect_good_2 = minor_stress_loss
			intellect_good_3 = minor_stress_loss
			shrewd = minor_stress_loss
			calm = minor_stress_loss
			scholar = minor_stress_loss
			wrathful = minor_stress_gain
			impatient = minor_stress_gain
			dull = minor_stress_gain
			intellect_bad_1 = minor_stress_gain
			intellect_bad_2 = minor_stress_gain
			intellect_bad_3 = minor_stress_gain
		}
		custom_tooltip = mz_convert_ongoing.venue_selection.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }
	}
	option = { #don't mingle
		name = mz_convert_ongoing.venue_selection.decline
		custom_tooltip = mz_convert_ongoing.venue_selection.decline_tt
		stress_impact = { 
			impatient = minor_stress_gain
		}
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_1_event
				value = yes
			}
		}
	}
	after = {
		hidden_effect = {
			if = {
				limit = {
					exists = scope:venue
				}
				if = {
					limit = {
						scope:venue = flag:letters
					}
					random_list = {
						75 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_reserved_letters_likes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1204 }
						}
						25 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_reserved_letters_dislikes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1304 }
						}
					}
				}
				else_if = {
					limit = {
						scope:venue = flag:prayer
					}
					random_list = {
						75 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_reserved_prayer_likes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1205 }
						}
						25 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_reserved_prayer_dislikes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1305 }
						}
					}
				}
				else_if = {
					limit = {
						scope:venue = flag:study
					}
					random_list = {
						75 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_reserved_study_likes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1206 }
						}
						25 = {
							modifier = {
								add = 100
								scope:target = { mz_convert_reserved_study_dislikes_trigger = yes }
							}
							scope:target = { trigger_event = mz_convert_ongoing.1306 }
						}
					}
				}
			}	
		}
	}
}

## Letters resolutions
# Target: Letters success (for now, not worrying too much about target events)
mz_convert_ongoing.1204 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner

	trigger = { exists = scope:scheme }
	
	option = {
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = {
			modifier = mz_convert_letters_modifier
			years = 5
		}
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1404
				days = { 3 5 }
			}
		}
	}
}
# Target: Letters failure (for now, not worrying too much about target events)
mz_convert_ongoing.1304 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner
	
	trigger = { exists = scope:scheme }

	option = {
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1504
				days = { 3 5 }
			}
		}
	}
}

# Schemer: Letters success
mz_convert_ongoing.1404 = {
	type = character_event
	title = mz_convert_ongoing.1404.t
	desc = mz_convert_ongoing.1404.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = {
		character = scope:owner
		animation = flirtation_left
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
	}

	trigger = { exists = scope:scheme }
	
	immediate = {
		add_character_modifier = {
			modifier = mz_convert_letters_modifier
			years = 5
		}
	}

	option = {
		name = mz_convert_ongoing.1404.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

# Schemer: Letters failure
mz_convert_ongoing.1504 = {
	type = character_event
	title = mz_convert_ongoing.1504.t
	desc = mz_convert_ongoing.1504.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = {
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = boredom
	}

	trigger = { exists = scope:scheme }

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1504.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

## Pray resolutions
# Target: pray success (for now, not worrying too much about target events)
mz_convert_ongoing.1205 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner

	trigger = { exists = scope:scheme }
	
	option = {
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = {
			modifier = mz_convert_pray_modifier
			years = 5
		}
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1405
				days = { 3 5 }
			}
		}
	}
}
# Target: pray failure (for now, not worrying too much about target events)
mz_convert_ongoing.1305 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner
	
	trigger = { exists = scope:scheme }

	option = {
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1505
				days = { 3 5 }
			}
		}
	}
}
# Schemer: pray success
mz_convert_ongoing.1405 = {
	type = character_event
	title = mz_convert_ongoing.1405.t
	desc = mz_convert_ongoing.1405.desc
	
	theme = seduce_scheme
	override_background = { reference = temple }
	left_portrait = {
		character = scope:owner
		animation = flirtation_left
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
	}

	trigger = { exists = scope:scheme }
	
	immediate = {
		add_character_modifier = {
			modifier = mz_convert_pray_modifier
			years = 5
		}
	}

	option = {
		name = mz_convert_ongoing.1405.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

# Schemer: pray failure
mz_convert_ongoing.1505 = {
	type = character_event
	title = mz_convert_ongoing.1505.t
	desc = mz_convert_ongoing.1505.desc
	
	theme = seduce_scheme
	override_background = { reference = temple }
	left_portrait = {
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = boredom
	}

	trigger = { exists = scope:scheme }

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1505.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

## study resolutions
# Target: study success (for now, not worrying too much about target events)
mz_convert_ongoing.1206 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner

	trigger = { exists = scope:scheme }
	
	option = {
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = {
			modifier = mz_convert_study_modifier
			years = 5
		}
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1406
				days = { 3 5 }
			}
		}
	}
}
# Target: study failure (for now, not worrying too much about target events)
mz_convert_ongoing.1306 = {
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner
	
	trigger = { exists = scope:scheme }

	option = {
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = {
				id = mz_convert_ongoing.1506
				days = { 3 5 }
			}
		}
	}
}
# Schemer: study success
mz_convert_ongoing.1406 = {
	type = character_event
	title = mz_convert_ongoing.1406.t
	desc = mz_convert_ongoing.1406.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = {
		character = scope:owner
		animation = flirtation_left
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
	}

	trigger = { exists = scope:scheme }
	
	immediate = {
		add_character_modifier = {
			modifier = mz_convert_study_modifier
			years = 5
		}
	}

	option = {
		name = mz_convert_ongoing.1406.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

# Schemer: study failure
mz_convert_ongoing.1506 = {
	type = character_event
	title = mz_convert_ongoing.1506.t
	desc = mz_convert_ongoing.1506.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = {
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = boredom
	}

	trigger = { exists = scope:scheme }

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1506.option
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

## Friendly meeting setup
scripted_trigger mz_convert_ongoing_5201_likes_seduction = {
	OR = {
		has_trait = lustful
		has_trait = rakish
		has_trait = seducer
		has_focus = intrigue_temptation_focus
		scope:owner = { attraction >= low_positive_attraction }
		scope:owner = { has_trait = beauty_good }
		scope:owner = { has_trait = seducer }
	}
}

scripted_trigger mz_convert_ongoing_5201_likes_nostalgia = {
	OR = {
		ai_compassion >= medium_positive_ai_value
		opinion = {
			target = scope:owner
			value >= very_high_positive_opinion
		}
		has_relation_best_friend = scope:owner
	}
}

mz_convert_ongoing.5201 = { #convert a friend
	type = character_event
	title = mz_convert_ongoing.5201.t
	desc = mz_convert_ongoing.5201.desc
	
	theme = seduce_scheme
	override_background = { reference = garden }
	left_portrait = {
		character = scope:owner
		animation = happiness
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
	}

	trigger = {
		OR = {
			has_opinion_modifier = {
				modifier = childhood_crush
				target = scope:target
			}
			has_relation_friend = scope:target
		}
		NOT = { is_consort_of = scope:owner }
		scope:owner = { is_landed = yes }
	}

	immediate = {
		scope:target.court_owner = {
			capital_province = {
				barony = {
					save_scope_as = court_location
				}
			}
		}
		reverse_add_opinion = {
			target = scope:target
			modifier = friendliness_opinion
			opinion = 10
		}
	}

	option = { #Try to seduce her.
		name = mz_convert_ongoing.5201.a
		custom_tooltip = mz_convert_ongoing.5201.a.tt
		custom_tooltip = mz_convert_ongoing.5201.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }

		save_scope_value_as = {
			name = mz_friend_approach
			value = flag:seduction
		}
		stress_impact = { 
			lustful = medium_stress_loss
			chaste = medium_stress_gain
			rakish = minor_stress_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				add = 20
				OR = {
					has_trait = lustful
					has_trait = seducer
					has_trait = rakish
					has_focus = intrigue_temptation_focus
				}
			}
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}

	option = { #Nostalgic approach
		name = mz_convert_ongoing.5201.b
		custom_tooltip = mz_convert_ongoing.5201.b.tt
		custom_tooltip = mz_convert_ongoing.5201.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }

		save_scope_value_as = {
			name = mz_friend_approach
			value = flag:remember
		}
		stress_impact = {
			gregarious = medium_stress_loss
			shy = medium_stress_gain
			contrite = major_stress_loss
			reclusive = minor_stress_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}

	option = { #Keep feelings to yourself - give up effect
		name = mz_convert_ongoing.5201.c
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_1_event
				value = yes
			}
		}
		ai_chance = {
			base = 30
		}
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					exists = scope:mz_friend_approach
				}
				if = {
					limit = {
						scope:mz_friend_approach = flag:seduction
					}
					random_list = {
						80 = {
							save_scope_value_as = {
								name = mz_convert_ongoing_5201_outcome
								value = flag:success
							}
						}
						20 = {
							modifier = { 
								scope:target = { mz_convert_ongoing_5201_likes_seduction = yes }
								add = -20
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_5201_outcome
								value = flag:failure
							}
						}					
					}
					scope:target = {
						trigger_event = {
							id = mz_convert_ongoing.5202
							days = { 10 20 }
						}
					}
				}
				else_if = {
					limit = {
						scope:mz_friend_approach = flag:remember
					}
					random_list = {
						80 = {
							save_scope_value_as = {
								name = mz_convert_ongoing_5201_outcome
								value = flag:success
							}
						}
						20 = {
							modifier = {
								scope:target = { mz_convert_ongoing_5201_likes_nostalgia = yes }
								add = -20
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_5201_outcome
								value = flag:failure
							}
						}
					}
					scope:target = {
						trigger_event = {
							id = mz_convert_ongoing.5205
							days = { 10 20 }
						}
					}
				}
			}
		}
	}
}

mz_convert_ongoing.5202 = { #Target event: placeholder/seduced?
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner
	override_background = { reference = garden }

	option = {
		trigger = {
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_5201_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.5203
		}
	}

	option = {
		trigger = {
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_5201_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.5204
		}
	}
}

mz_convert_ongoing.5203 = { #Schemer: target responds well to seduction
	type = character_event
	title = mz_convert_ongoing.5201.t
	desc = mz_convert_ongoing.5203.desc
	
	theme = seduce_scheme
	left_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	override_background = { reference = garden }


	option = {
		name = mz_convert_ongoing.5203.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.5204 = { #Schemer: target rejects seduction
	type = character_event
	title = mz_convert_ongoing.5201.t
	desc = mz_convert_ongoing.5204.desc
	
	theme = seduce_scheme
	left_portrait = { 
		character = scope:target
		animation = disgust
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	override_background = { reference = garden }


	option = {
		name = mz_convert_ongoing.5204.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

mz_convert_ongoing.5205 = { #Target event: placeholder/remember
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner
	override_background = { reference = garden }

	option = {
		trigger = {
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_5201_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.5206
		}
	}

	option = {
		trigger = {
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_5201_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.5207
		}
	}
}

mz_convert_ongoing.5206 = { #Schemer: target responds well to nostalgia
	type = character_event
	title = mz_convert_ongoing.5201.t
	desc = mz_convert_ongoing.5206.desc
	
	theme = seduce_scheme
	left_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	override_background = { reference = garden }


	option = {
		name = mz_convert_ongoing.5206.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.5207 = { #Schemer: target rejects nostalgia
	type = character_event
	title = mz_convert_ongoing.5201.t
	desc = mz_convert_ongoing.5207.desc
	
	theme = seduce_scheme
	left_portrait = { 
		character = scope:target
		animation = disapproval
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	override_background = { reference = garden }


	option = {
		name = mz_convert_ongoing.5207.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

## Converting a family member
mz_convert_ongoing.5301 = {
	type = character_event
	title = mz_convert_ongoing.5301.t
	desc = mz_convert_ongoing.5301.desc
	
	theme = seduce_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	override_background = { reference = sitting_room }
	
	trigger = {
		scope:target = {
			is_close_or_extended_family_of = scope:owner
			NOT = { is_consort_of = scope:owner } #All kinds of things might happen...?
		}
	}

	option = { #Be subtle
		name = mz_convert_ongoing.5301.a
		custom_tooltip = mz_convert_ongoing.5301.a.tt
		custom_tooltip = mz_convert_ongoing.5301.success_tt
		show_as_tooltip = {
			mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
		}
		scope:target = {
			trigger_event = {
				id = mz_convert_ongoing.5302
				days = { 5 10 }
			}
		}
	}

	option = { #Be seductive (kiss)
		name = mz_convert_ongoing.5301.b
		custom_tooltip = mz_convert_ongoing.5301.b.tt
		custom_tooltip = mz_convert_ongoing.5301.success_tt
		show_as_tooltip = {
			scope:target = {
				add_opinion = {
					target = scope:owner
					modifier = romance_opinion
					opinion = 10
				}
			}
			mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
		}
		stress_impact = {
			lustful = medium_stress_loss
			rakish = minor_stress_loss
			chaste = medium_stress_gain
		}
		scope:target = {
			trigger_event = {
				id = mz_convert_ongoing.5305
				days = { 5 10 }
			}
		}
	}
	
	option = {
		name = mz_convert_ongoing.5301.c
		custom_tooltip = mz_convert_ongoing_decline_event.tt
		scope:scheme = {
			set_variable = {
				name = declined_seduce_milestone_1_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
	}
}

mz_convert_ongoing.5302 = { #target event - subtle approach
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner

	trigger = {
		exists = scope:scheme
	}
	override_background = { reference = sitting_room }

	option = { #acceptance
		name = mz_convert_ongoing.placeholder.option
		reverse_add_opinion = {
			target = scope:owner
			modifier = romance_opinion
			opinion = 15
		}
		scope:owner = {
			trigger_event = mz_convert_ongoing.5303
		}
		ai_chance = {
			base = 100
			opinion_modifier = {
				opinion_target = scope:owner
				multiplier = 1
			}
			modifier = {
				add = 20
				scope:owner = { diplomacy >= high_skill_rating }
			}
			modifier = {
				add = 25
				scope:owner = { 
					OR = {
						has_diplomacy_lifestyle_trait_trigger = yes
						has_lifestyle = diplomacy_lifestyle
					}
				}
			}
			modifier = {
				add = 50
				scope:owner = { has_perk = subtle_desire_perk }
			}
			modifier = {
				add = 500
				has_opinion_modifier = {
					target = scope:owner
					modifier = romance_opinion
				}
			}
		}
	}

	option = { #rejection
		name = mz_convert_ongoing.placeholder.option
		
		add_prestige = medium_prestige_gain
		scope:owner = {
			trigger_event = mz_convert_ongoing.5304
		}
		
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}
}

mz_convert_ongoing.5303 = { #Schemer: subtle accept
	type = character_event
	title = mz_convert_ongoing.5301.t
	desc = mz_convert_ongoing.5303.desc
	
	theme = seduce_scheme
	left_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	override_background = { reference = sitting_room }


	option = {
		name = mz_convert_ongoing.5303.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.5304 = { #Schemer: subtle rejection
	type = character_event
	title = mz_convert_ongoing.5301.t
	desc = mz_convert_ongoing.5304.desc
	
	theme = seduce_scheme
	left_portrait = { 
		character = scope:target
		animation = disapproval
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	override_background = { reference = sitting_room }


	option = {
		name = mz_convert_ongoing.5304.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

mz_convert_ongoing.5305 = { #target: seduction approach
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:owner

	trigger = {
		exists = scope:scheme
	}

	option = { #target seduced
		name = mz_convert_ongoing.placeholder.option
		reverse_add_opinion = {
			target = scope:owner
			modifier = romance_opinion
			opinion = 10
		}
		add_opinion = {
			target = scope:owner
			modifier = romance_opinion
			opinion = 10
		}
		scope:owner = {
			trigger_event = mz_convert_ongoing.5306
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_boldness = 1
			}
			opinion_modifier = {
				opinion_target = scope:owner
				multiplier = 1
			}
			modifier = {
				add = 500
				has_opinion_modifier = {
					target = scope:owner
					modifier = romance_opinion
				}
			}
			modifier = {
				add = 100
				has_trait = lustful
			}
			modifier = {
				add = 100
				scope:owner = { has_trait = seducer }
			}
			modifier = {
				add = 20
				scope:owner = { has_trait = beauty_good }
			}
			modifier = {
				add = 50
				scope:owner = { has_focus = intrigue_temptation_focus }
			}
			modifier = {
				add = 50
				scope:owner = { has_perk = subtle_desire_perk }
			}
		}
	}

	option = { #target rejection
		name = mz_convert_ongoing.placeholder.option
		add_prestige = medium_prestige_gain
		scope:owner = {
			trigger_event = mz_convert_ongoing.5307
		}
		
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.5
			}
			modifier = {
				add = 100
				has_trait = shy
			}
			modifier = {
				add = 20
				faith = { 
					NOT = { has_doctrine_parameter = consanguinity_unrestricted_incest }
				}
			}
			modifier = {
				add = 80
				has_trait = zealous
				faith = { 
					NOT = { has_doctrine_parameter = consanguinity_unrestricted_incest }
				}
			}
			modifier = {
				add = 50
				has_trait = chaste
			}
			modifier = {
				add = 100
				has_sexuality = asexual
			}
		}
	}
}

mz_convert_ongoing.5306 = { #Schemer: kiss success
	type = character_event
	title = mz_convert_ongoing.5301.t
	desc = mz_convert_ongoing.5306.desc
	
	theme = seduce_scheme
	left_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.5306.a
		show_as_tooltip = {
			reverse_add_opinion = {
				target = scope:target
				modifier = romance_opinion
				opinion = 10
			}
		}
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.5307 = { #Schemer: kiss failure
	type = character_event
	title = mz_convert_ongoing.5301.t
	desc = mz_convert_ongoing.5307.desc
	
	theme = seduce_scheme
	left_portrait = { 
		character = scope:target
		animation = disgust
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.5307.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

## Plant a book

mz_convert_ongoing.4001 = { #plant a book
	type = character_event
	title = mz_convert_ongoing.4001.t
	desc = mz_convert_ongoing.4001.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = scope:target

	trigger = {
		scope:owner = {
			OR = { 
				intrigue >= decent_skill_rating
				diplomacy >= decent_skill_rating
			}
		}
		scope:target = { 
			OR = {
				learning >= medium_skill_rating
				has_trait = shy
				has_trait = reclusive
			}
		}
		scope:target = {
			NOT = { is_consort_of = scope:owner }
		}

		# So we don't try to pull in mercenary captain's courts.
		exists = scope:target.court_owner
		exists = scope:target.court_owner.capital_province
	}

	immediate = {
		scope:target.court_owner = {
			capital_province = {
				barony = {
					save_scope_as = court_location
				}
			}
		}
	}
	#Options: gift her the book, sneakily plant the book, ignore opportunity
	option = { #gift
		name = mz_convert_ongoing.4001.a
		custom_tooltip = mz_convert_ongoing.4001.a.tt
		custom_tooltip = mz_convert_ongoing.4001.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }
		stress_impact = {
			shy = minor_stress_gain
			generous = medium_stress_loss
			honest = minor_stress_impact_loss
		}
		save_scope_value_as = {
			name = mz_lesbian_book
			value = flag:gift
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 100
				diplomacy >= high_skill_rating
			}
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}

	option = { #sneak
		name = mz_convert_ongoing.4001.b
		custom_tooltip = mz_convert_ongoing.4001.b.tt
		custom_tooltip = mz_convert_ongoing.4001.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }
		stress_impact = {
			deceitful = medium_stress_loss
			honest = medium_stress_gain
			schemer = minor_stress_loss
		}
		save_scope_value_as = {
			name = mz_lesbian_book
			value = flag:sneak
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 50
				intrigue >= medium_skill_rating
			}
			modifier = {
				add = 100
				OR = {
					has_trait = shy
					has_trait = reclusive
				}
			}
			modifier = {
				add = 50
				has_trait = deceitful
			}
			ai_value_modifier = {
				ai_honor = -0.5
			}
		}
	}

	option = { #give up
		name = mz_convert_ongoing.4001.c
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_1_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 30
		}
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					exists = scope:mz_lesbian_book
				}
				if = {
					limit = {
						scope:mz_lesbian_book = flag:gift
					}
					random_list = {
						50 = {
							modifier = { 
								scope:target = { has_trait = lustful }
								add = 50
							}
							modifier = { 
								scope:owner = { has_diplomacy_lifestyle_trait_trigger = yes }
								add = 100
							}
							modifier = { 
								scope:owner = { has_trait = seducer }
								add = 100
							}
							modifier = { 
								scope:owner = { has_focus = intrigue_temptation_focus }
								add = 50
							}
							compare_modifier = { 
								value = diplomacy
								multiplier = 2
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_4001_outcome
								value = flag:success
							}
						}
						
						50 = {
							modifier = { 
								scope:target = { has_trait = shy }
								add = 100
							}
							modifier = { 
								scope:target = { has_trait = chaste }
								add = 50
							}
							modifier = {
								add = 100
								scope:target = { has_sexuality = asexual }
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_4001_outcome
								value = flag:failure
							}
						}						
					}
					scope:target = {
						trigger_event = {
							id = mz_convert_ongoing.4002
							days = { 10 20 }
						}
					}
				}
				else_if = {
					limit = {
						scope:mz_lesbian_book = flag:sneak
					}
					random_list = {
						50 = {
							modifier = { 
								scope:owner = { has_intrigue_lifestyle_trait_trigger = yes }
								add = 100
							}
							modifier = { 
								scope:owner = { has_focus = intrigue_skulduggery_focus }
								add = 50
							}
							modifier = { 
								scope:target = { has_trait = lustful }
								add = 50
							}
							modifier = { 
								scope:target = { has_trait = shy }
								add = 25
							}
							compare_modifier = { 
								value = intrigue
								multiplier = 2
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_4001_outcome
								value = flag:success
							}
						}
						50 = {
							modifier = { 
								scope:target = { intrigue >= high_skill_rating }
								add = 10
							}
							modifier = { 
								scope:owner = { has_trait = impatient }
								add = 50
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_4001_outcome
								value = flag:failure
							}
						}
					}
					scope:target = {
						trigger_event = {
							id = mz_convert_ongoing.4005
							days = { 10 20 }
						}
					}
				}
			}
		}
	}
}

mz_convert_ongoing.4002 = { #Target event: placeholder/receives gift
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:target
	override_background = { reference = study }

	option = { #Likes book
		trigger = {
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_4001_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.4003
		}
	}

	option = { #Dislikes book
		trigger = {
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_4001_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.4004
		}
	}
}

mz_convert_ongoing.4003 = { #schemer event: liked gift
	type = letter_event
	opening = {
		desc = mz_convert_ongoing.target.opening
	}
	desc = mz_convert_ongoing.4003.desc
	sender = scope:target

	trigger = { exists = scope:scheme }

	immediate = {
		scope:target = {
			add_opinion = {
				modifier = grateful_opinion
				target = scope:owner
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.4003.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.4004 = { #schemer event: did not like gift
	type = letter_event
	opening = {
		desc = mz_convert_ongoing.target.opening
	}
	desc = mz_convert_ongoing.4004.desc
	sender = scope:target

	trigger = { exists = scope:scheme }

	immediate = {
		scope:target = {
			add_opinion = {
				modifier = disgusted_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.4004.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

mz_convert_ongoing.4005 = { #Target event: placeholder/discovers book
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	left_portrait = scope:target
	override_background = { reference = study }

	option = { #Likes book
		trigger = {
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_4001_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.4006
		}
	}

	option = { #Dislikes book
		trigger = {
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_4001_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.4007
		}
	}
}

mz_convert_ongoing.4006 = { #Schemer: target liked book
	type = character_event
	title = mz_convert_ongoing.4001.t
	desc = mz_convert_ongoing.4006.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.4003.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.4007 = { #Schemer: target disliked book
	type = character_event
	title = mz_convert_ongoing.4001.t
	desc = mz_convert_ongoing.4007.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:target
		animation = disgust
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.4004.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

## Fan Mail
scripted_trigger mz_convert_outgoing_fanmail_likes_prestige_trigger = { # Likes prestige
	OR = { 
		has_trait = arrogant
		has_trait = ambitious
		prestige_level > 3
		AND = {
			exists = dynasty
			dynasty = { dynasty_prestige_level > medium_dynasty_prestige_level }
		}
		has_focus = diplomacy_majesty_focus
		has_trait = august
		has_trait = administrator
	}
}
scripted_trigger mz_convert_outgoing_fanmail_dislikes_prestige_trigger = { # dislikes prestige
	OR = { 
		has_trait = content
		has_trait = humble
		has_trait = lazy
		has_trait = arbitrary
	}
}
scripted_trigger mz_convert_outgoing_fanmail_likes_beauty_trigger = { # Likes beauty
	OR = { 
		has_trait = beauty_good
		has_trait = lustful
		has_trait = gallant
		attraction > medium_positive_attraction
	}
}
scripted_trigger mz_convert_outgoing_fanmail_dislikes_beauty_trigger = { # dislikes beauty
	OR = { 
		has_trait = beauty_bad
		has_trait = chaste
		has_trait = disfigured
		attraction < low_positive_attraction
	}
}
scripted_trigger mz_convert_outgoing_fanmail_likes_honor_trigger = { # likes honor
	OR = { 
		has_trait = shieldmaiden
		has_trait = gallant
		has_trait = strategist
		has_focus = martial_chivalry_focus
		has_trait = education_martial_prowess
		has_trait = lifestyle_blademaster
		has_trait = brave
	}
}

scripted_trigger mz_convert_outgoing_fanmail_dislikes_honor_trigger = { # dislikes honor
	OR = { 
		has_trait = craven
		has_trait = lazy
		has_trait = deceitful
		has_trait = vengeful
	}
}

mz_convert_ongoing.4010 = { #fan mail
	type = character_event
	title = mz_convert_ongoing.4010.t
	desc = mz_convert_ongoing.4010.desc
	
	theme = seduce_scheme
	override_background = { reference = throne_room }
	left_portrait = scope:target

	trigger = {
		scope:owner = { diplomacy >= decent_skill_rating }
		scope:target = {
			OR = {
				mz_convert_outgoing_fanmail_likes_prestige_trigger = yes
				mz_convert_outgoing_fanmail_likes_beauty_trigger = yes
				mz_convert_outgoing_fanmail_likes_honor_trigger = yes
			}
		}
		scope:target = {
			NOT = { is_consort_of = scope:owner }
		}

		# So we don't try to pull in mercenary captain's courts.
		exists = scope:target.court_owner
		exists = scope:target.court_owner.capital_province
	}

	immediate = {
		scope:target.court_owner = {
			capital_province = {
				barony = {
					save_scope_as = court_location
				}
			}
		}
	}
	#Options: praise her prestige, praise her beauty, praise her honor, decline
	option = { #prestige
		name = mz_convert_ongoing.4010.a
		custom_tooltip = mz_convert_ongoing.4010.a.tt
		custom_tooltip = mz_convert_ongoing.4010.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }

		save_scope_value_as = {
			name = mz_fan_mail
			value = flag:prestige
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}

	option = { #beauty
		name = mz_convert_ongoing.4010.b
		custom_tooltip = mz_convert_ongoing.4010.b.tt
		custom_tooltip = mz_convert_ongoing.4010.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }

		save_scope_value_as = {
			name = mz_fan_mail
			value = flag:beauty
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 50
				has_trait = lustful
			}
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}

	option = { #honor
		name = mz_convert_ongoing.4010.c
		custom_tooltip = mz_convert_ongoing.4010.c.tt
		custom_tooltip = mz_convert_ongoing.4010.success_tt
		mz_convert_ongoing_possible_outcomes_tooltip_effect = { MILESTONE = 1 }

		save_scope_value_as = {
			name = mz_fan_mail
			value = flag:honor
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 50
				has_trait = shieldmaiden
			}
			ai_value_modifier = {
				ai_honor = 0.5
			}
		}
	}

	option = { #give up
		name = mz_convert_ongoing.4010.d
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_1_event
				value = yes
			}
		}
		ai_chance = {
			base = 30
		}
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					exists = scope:mz_fan_mail
				}
				if = {
					limit = {
						scope:mz_fan_mail = flag:prestige
					}
					random_list = {
						50 = {
							modifier = { 
								scope:target = { mz_convert_outgoing_fanmail_likes_prestige_trigger = yes }
								add = 200
							}
							compare_modifier = { 
								value = diplomacy
								multiplier = 2
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_4010_outcome
								value = flag:success
							}
						}
						
						50 = {
							modifier = { 
								scope:target = { mz_convert_outgoing_fanmail_dislikes_prestige_trigger = yes }
								add = 200
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_4010_outcome
								value = flag:failure
							}
						}						
					}
					scope:target = {
						trigger_event = {
							id = mz_convert_ongoing.4011
							days = { 10 20 }
						}
					}
				}
				else_if = {
					limit = {
						scope:mz_fan_mail = flag:beauty
					}
					random_list = {
						50 = {
							modifier = { 
								scope:target = { mz_convert_outgoing_fanmail_likes_beauty_trigger = yes }
								add = 200
							}
							compare_modifier = { 
								value = diplomacy
								multiplier = 2
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_4010_outcome
								value = flag:success
							}
						}
						
						50 = {
							modifier = { 
								scope:target = { mz_convert_outgoing_fanmail_dislikes_beauty_trigger = yes }
								add = 200
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_4010_outcome
								value = flag:failure
							}
						}						
					}
					scope:target = {
						trigger_event = {
							id = mz_convert_ongoing.4011
							days = { 10 20 }
						}
					}
				}
				else_if = {
					limit = {
						scope:mz_fan_mail = flag:honor
					}
					random_list = {
						50 = {
							modifier = { 
								scope:target = { mz_convert_outgoing_fanmail_likes_honor_trigger = yes }
								add = 200
							}
							compare_modifier = { 
								value = diplomacy
								multiplier = 2
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_4010_outcome
								value = flag:success
							}
						}
						
						50 = {
							modifier = { 
								scope:target = { mz_convert_outgoing_fanmail_dislikes_honor_trigger = yes }
								add = 200
							}
							save_scope_value_as = {
								name = mz_convert_ongoing_4010_outcome
								value = flag:failure
							}
						}
					}
					scope:target = {
						trigger_event = {
							id = mz_convert_ongoing.4011
							days = { 10 20 }
						}
					}
				}
			}
		}
	}
}

mz_convert_ongoing.4011 = { #Target: received mail (placeholder) can add additional, conditional descriptions if ever expanded
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = { #Likes prestige
		trigger = {
			scope:mz_fan_mail = flag:prestige
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_4010_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.4012
		}
	}

	option = { #Dislikes prestige
		trigger = {
			scope:mz_fan_mail = flag:prestige
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_4010_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.4013
		}
	}

	option = { #Likes beauty
		trigger = {
			scope:mz_fan_mail = flag:beauty
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_4010_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.4012
		}
	}

	option = { #Dislikes beauty
		trigger = {
			scope:mz_fan_mail = flag:beauty
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_4010_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.4013
		}
	}

	option = { #Likes honor
		trigger = {
			scope:mz_fan_mail = flag:honor
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_4010_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.4012
		}
	}

	option = { #Dislikes honor
		trigger = {
			scope:mz_fan_mail = flag:honor
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_4010_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		
		scope:owner = {
			trigger_event = mz_convert_ongoing.4013
		}
	}
}

mz_convert_ongoing.4012 = { #schemer event: liked fanmail
	type = letter_event
	opening = {
		desc = mz_convert_ongoing.fanmail.opening
	}
	desc = mz_convert_ongoing.4012.desc
	sender = scope:target

	trigger = { exists = scope:scheme }

	immediate = {
		add_character_modifier = { 
			modifier = mz_convert_charming_modifier
			years = 5
		}
	}

	option = {
		name = mz_convert_ongoing.4012.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.4013 = { #schemer event: disliked fanmail
	type = letter_event
	opening = {
		desc = mz_convert_ongoing.fanmail.opening
	}
	desc = mz_convert_ongoing.4013.desc
	sender = scope:target

	trigger = { exists = scope:scheme }

	immediate = {
		stress_impact = {
			base = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			callous = minor_stress_impact_loss
		}
	}

	option = {
		name = mz_convert_ongoing.4013.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

## A token of affection (fallback)
mz_convert_ongoing.3001 = { #schemer event - setup
	type = character_event
	title = mz_convert_ongoing.3001.t
	desc = mz_convert_ongoing.3001.desc
	
	theme = seduce_scheme
	override_background = { reference = sitting_room }
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		#not for friends or family, use other events for that
		scope:target = {
			NOR = { 
				has_relation_friend = scope:owner
				has_relation_best_friend = scope:owner
				is_close_or_extended_family_of = scope:owner
			}
		}
	}

	option = { #Expensive Gift
		name = mz_convert_ongoing.3001.a
		custom_tooltip = mz_convert_ongoing.3001.a.tt
		remove_short_term_gold = medium_gold_value
		save_scope_value_as = {
			name = mz_gift_type
			value = flag:expensive
		}
		stress_impact = { 
			greedy = medium_stress_gain
			generous = medium_stress_loss
		}
		random_list = {
			75 = {
				#Success!
				desc = mz_convert_ongoing.3001.option.success.desc
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
				}
				modifier = {
					add = -60
					scope:target = {
						OR = { 
							has_trait = content
							has_trait = humble
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3001_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3002
						days = { 20 30 }
					}
				}
			}
			25 = {
				#Failure
				desc = mz_convert_ongoing.3001.option.failure.desc
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
				}
				modifier = {
					add = -25
					scope:target = {
						OR = { 
							has_trait = greedy
							has_trait = avaricious
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3001_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3002
						days = { 20 30 }
					}
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 100
				OR = {
					has_trait = intellect_good
					has_trait = shrewd
				}
				scope:target = { 
					OR = { 
						has_trait = content
						has_trait = humble
					}
				}
			}
			ai_value_modifier = {
				ai_greed = -0.2
			}
		}
	}
	option = { #Simple Gift
		name = mz_convert_ongoing.3001.b
		custom_tooltip = mz_convert_ongoing.3001.b.tt
		remove_short_term_gold = minor_gold_value
		save_scope_value_as = {
			name = mz_gift_type
			value = flag:simple
		}
		stress_impact = { 
			greedy = minor_stress_gain
			generous = minor_stress_loss
		}
		random_list = {
			50 = {
				#Success!
				desc = mz_convert_ongoing.3001.option.success.desc
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
				}
				modifier = {
					add = -45
					scope:target = {
						OR = { 
							has_trait = greedy
							has_trait = avaricious
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3001_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3002
						days = { 20 30 }
					}
				}
			}
			50 = {
				#Failure
				desc = mz_convert_ongoing.3001.option.failure.desc
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
				}
				modifier = {
					add = -50
					scope:target = {
						OR = { 
							has_trait = content
							has_trait = humble
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3001_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3002
						days = { 20 30 }
					}
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 100
				OR = {
					has_trait = intellect_good
					has_trait = shrewd
				}
				scope:target = { 
					OR = { 
						has_trait = content
						has_trait = humble
					}
				}
			}
			ai_value_modifier = {
				ai_greed = 0.2
			}
		}
	}
	option = { #Sensual Gift
		name = mz_convert_ongoing.3001.c
		custom_tooltip = mz_convert_ongoing.3001.c.tt
		remove_short_term_gold = minor_gold_value
		save_scope_value_as = {
			name = mz_gift_type
			value = flag:sensual
		}
		stress_impact = { 
			chaste = medium_stress_gain
			greedy = minor_stress_gain
			generous = minor_stress_loss
		}
		random_list = {
			50 = {
				#Success!
				desc = mz_convert_ongoing.3001.option.success.desc
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
				}
				modifier = {
					add = -45
					scope:target = {
						OR = {
							has_trait = chaste
							has_sexuality = asexual
							scope:target = {
								is_married = yes
								any_spouse = {
									reverse_has_opinion_modifier = {
										target = scope:target
										modifier = love_opinion
									}
								}
							}
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3001_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3002
						days = { 20 30 }
					}
				}
			}
			50 = {
				#Failure
				desc = mz_convert_ongoing.3001.option.failure.desc
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
				}
				modifier = {
					add = -50
					scope:target = {
						OR = { 
							has_trait = lustful
							has_focus = intrigue_temptation_focus
							has_trait = seducer
							has_trait = rakish
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3001_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3002
						days = { 20 30 }
					}
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 15
				OR = {
					has_trait = lustful
					has_focus = intrigue_temptation_focus
					has_trait = seducer
					has_trait = rakish
				}
			}
			modifier = {
				add = 100
				OR = {
					has_trait = intellect_good
					has_trait = shrewd
				}
				scope:target = { 
					OR = { 
						has_trait = lustful
						has_focus = intrigue_temptation_focus
						has_trait = seducer
						has_trait = rakish
					}
				}
			}
			ai_value_modifier = {
				ai_boldness = 0.2
			}
		}
	}
	option = { #give up
		name = mz_convert_ongoing.3001.d
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_1_event
				value = yes
			}
		}
		stress_impact = {
			greedy = medium_stress_loss
			generous = minor_stress_gain
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.3002 = { #Target: received gift (placeholder) can add additional, conditional descriptions if ever expanded
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = throne_room }
	left_portrait = { 
		character = scope:owner
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	option = { #Likes expensive gift
		trigger = {
			scope:mz_gift_type = flag:expensive
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3001_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = {
			modifier = mz_expensive_gift_modifier
			years = 5
		}
		scope:owner = {
			trigger_event = mz_convert_ongoing.3003
		}
	}

	option = { #Dislikes expensive gift
		trigger = {
			scope:mz_gift_type = flag:expensive
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3001_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		add_gold = medium_gold_value
		scope:owner = {
			trigger_event = mz_convert_ongoing.3004
		}
	}

	option = { #Likes simple gift
		trigger = {
			scope:mz_gift_type = flag:simple
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3001_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = {
			modifier = mz_simple_gift_modifier
			years = 5
		}
		scope:owner = {
			trigger_event = mz_convert_ongoing.3003
		}
	}

	option = { #Dislikes simple gift
		trigger = {
			scope:mz_gift_type = flag:simple
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3001_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		add_gold = minor_gold_value
		scope:owner = {
			trigger_event = mz_convert_ongoing.3004
		}
	}

	option = { #Likes sensual gift
		trigger = {
			scope:mz_gift_type = flag:sensual
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3001_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = {
			modifier = mz_bawdy_gift_modifier
			years = 5
		}
		scope:owner = {
			trigger_event = mz_convert_ongoing.3003
		}
	}

	option = { #Dislikes sensual gift
		trigger = {
			scope:mz_gift_type = flag:sensual
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3001_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		add_gold = minor_gold_value
		scope:owner = {
			trigger_event = mz_convert_ongoing.3004
		}
	}
}

mz_convert_ongoing.3003 = { #schemer event: liked gift
	type = letter_event
	opening = {
		desc = mz_convert_ongoing.target.opening
	}
	desc = mz_convert_ongoing.3003.desc
	sender = scope:target

	trigger = { exists = scope:scheme }

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = grateful_opinion
				target = scope:owner
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.3003.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.3004 = { #schemer event: disliked gift
	type = letter_event
	opening = {
		desc = mz_convert_ongoing.target.opening
	}
	desc = mz_convert_ongoing.3004.desc
	sender = scope:target

	trigger = { exists = scope:scheme }

	immediate = {
		stress_impact = {
			base = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			callous = minor_stress_impact_loss
		}
	}

	option = {
		name = mz_convert_ongoing.3004.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}


## Skill-based
## Use Intrigue
mz_convert_ongoing.6001 = { #schemer event: discover anything that might hint towards homosexual interests
	type = character_event
	title = mz_convert_ongoing.6001.t
	desc = mz_convert_ongoing.6001.desc
	
	theme = seduce_scheme
	override_background = { reference = sitting_room }
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:owner = {
			OR = { 
				intrigue >= high_skill_rating
				has_lifestyle = intrigue_lifestyle
				has_intrigue_lifestyle_trait_trigger = yes
			}
		}
		scope:target = {
			is_ai = yes
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.5
			has_trait = schemer
		}
	}

	option = { #That's easy
		name = mz_convert_ongoing.6001.a
		trigger = {
			has_trait = schemer
		}
		trait = schemer
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
		ai_chance = {
			base = 1000
		}
	}
	option = { #Subtle question
		name = mz_convert_ongoing.6001.b
		stress_impact = { 
			shy = minor_stress_gain
		}
		duel = {
			skill = diplomacy
			target = scope:target
			20 = {	
				desc = mz_convert_ongoing.6001.b.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -19
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.2
					min = -19
				}
				modifier = {
					add = 80
					has_diplomacy_lifestyle_trait_trigger = yes
				}
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
				}
				trigger_event = {
					id = mz_convert_ongoing.6002
					days = 3
				}
			}
			20 = {
				desc = mz_convert_ongoing.6001.b.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = -19
				}
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
				}
				trigger_event = {
					id = mz_convert_ongoing.6003
					days = 3
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 100
				has_diplomacy_lifestyle_trait_trigger = yes
			}
			modifier = {
				add = 200
				diplomacy > intrigue
				ai_rationality > 0
			}
			ai_value_modifier = {
				ai_sociability = 0.2
			}
		}
	}
	option = { #use spies
		name = mz_convert_ongoing.6001.c
		stress_impact = { 
			honest = minor_stress_gain
			deceitful = minor_stress_loss
		}
		duel = {
			skill = intrigue
			target = scope:target
			20 = {	
				desc = mz_convert_ongoing.6001.c.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -19
				}
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
				}
				trigger_event = {
					id = mz_convert_ongoing.6004
					days = 3
				}
			}
			20 = {
				desc = mz_convert_ongoing.6001.c.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = -19
				}
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
				}
				trigger_event = {
					id = mz_convert_ongoing.6005
					days = 3
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 100
				has_trait = deceitful
			}
			modifier = {
				add = 200
				intrigue > diplomacy
				ai_rationality > 0
			}
			ai_value_modifier = {
				ai_honor = -0.2
			}
		}
	}
	option = { #give up
		name = mz_convert_ongoing.6001.d
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_1_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.6002 = { #schemer event: diplo success
	type = character_event
	title = mz_convert_ongoing.6001.t
	desc = mz_convert_ongoing.6002.desc
	
	theme = seduce_scheme
	override_background = { reference = sitting_room }
	left_portrait = { 
		character = scope:owner
		animation = happiness
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.6002.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.6003 = { #schemer event: diplo failure
	type = character_event
	title = mz_convert_ongoing.6001.t
	desc = mz_convert_ongoing.6003.desc
	
	theme = seduce_scheme
	override_background = { reference = sitting_room }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = dismissal
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.6003.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

mz_convert_ongoing.6004 = { #schemer event: intrigue success
	type = character_event
	title = mz_convert_ongoing.6001.t
	desc = mz_convert_ongoing.6004.desc
	
	theme = seduce_scheme
	override_background = { reference = sitting_room }
	left_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.6004.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.6005 = { #schemer event: intrigue failure
	type = character_event
	title = mz_convert_ongoing.6001.t
	desc = mz_convert_ongoing.6005.desc
	
	theme = seduce_scheme
	override_background = { reference = sitting_room }
	left_portrait = { 
		character = scope:target
		animation = disgust
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.6005.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

##Both Witches
mz_convert_ongoing.6050 = { #hold private rite
	type = character_event
	title = mz_convert_ongoing.6050.t
	desc = mz_convert_ongoing.6050.desc
	
	theme = witchcraft
	override_background = { reference = wilderness }
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:owner = {
			OR = { 
				has_trait = witch
				any_secret = { secret_type = secret_witch }
			}
		}
		scope:target = {
			is_witch_known_by_trigger = { CHARACTER = scope:owner }
			faith = scope:owner.faith
		}
	}

	option = { #Hold traditional rite
		name = mz_convert_ongoing.6050.a
		save_scope_value_as = {
			name = mz_convert_witchcraft
			value = flag:traditional
		}
		random_list = {
			70 = {
				#Success!
				desc = mz_convert_ongoing.6050.a.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
				}
				compare_modifier = {
					value = learning
					multiplier = 1.5
				}
				modifier = {
					add = 50
					has_trait = lifestyle_herbalist
				}
				modifier = {
					add = 20
					scope:target = { has_trait = patient }
				}
				modifier = {
					add = 50
					scope:target = { learning >= high_skill_rating }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6050_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6051
						days = { 2 5 }
					}
				}
			}
			30 = {
				#Failure
				desc = mz_convert_ongoing.6050.a.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = cynical }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = arrogant }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = impatient }
				}
				modifier = {
					add = 50
					scope:target = { learning < low_skill_rating }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6050_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6051
						days = { 2 5 }
					}
				}
			}
		}
		stress_impact = {
			lifestyle_mystic = minor_stress_loss
			lifestyle_herbalist = minor_stress_loss
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 45
			modifier = {
				add = 45
				learning >= average_skill_rating
			}
		}
	}

	option = { #Hold carnal rite
		name = mz_convert_ongoing.6050.b
		save_scope_value_as = {
			name = mz_convert_witchcraft
			value = flag:carnal
		}
		random_list = {
			50 = {
				#Success!
				desc = mz_convert_ongoing.6050.b.success
				min = 5
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
					had_sex_with_effect = { 
						CHARACTER = scope:target 
						PREGNANCY_CHANCE = 0
					}
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.5
					min = -49
				}
				modifier = {
					add = {
						value = attraction
						multiply = 1
					}
				}
				modifier = {
					add = 50
					has_trait = seducer
				}
				modifier = {
					add = 25
					has_focus = intrigue_temptation_focus
				}
				modifier = {
					add = 25
					scope:target = { has_trait = lustful }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6050_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6051
						days = { 2 5 }
					}
				}
			}
			50 = {
				#Failure
				desc = mz_convert_ongoing.6050.b.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
				}
				min = 5
				modifier = {
					add = 25
					scope:target = { has_trait = chaste }
				}
				modifier = {
					add = 100
					scope:target = { has_sexuality = asexual }
				}
				modifier = {
					add = {
						value = attraction
						multiply = -1
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6050_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6051
						days = { 2 5 }
					}
				}
			}
		}
		stress_impact = {
			lustful = minor_stress_loss
			chaste = minor_stress_gain
		}
		ai_chance = {
			base = 45
			modifier = {
				add = 45
				learning >= average_skill_rating
			}
		}
	}
	option = { #give up
		name = mz_convert_ongoing.6050.c
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_1_event
				value = yes
			}
		}
		stress_impact = {
			impatient = medium_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.6051 = { #Target placeholder event
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = witchcraft
	override_background = { reference = wilderness }
	left_portrait = { 
		character = scope:owner
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	option = { #Likes traditional rite
		trigger = {
			scope:mz_convert_witchcraft = flag:traditional
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6050_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		add_learning_lifestyle_xp = major_lifestyle_xp
		scope:owner = {
			trigger_event = mz_convert_ongoing.6052
		}
	}

	option = { #Dislikes traditional rite
		trigger = {
			scope:mz_convert_witchcraft = flag:traditional
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6050_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.6053
		}
	}

	option = { #Likes carnal rite
		trigger = {
			scope:mz_convert_witchcraft = flag:carnal
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6050_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		mz_target_convert_sex_effect = yes
		scope:owner = {
			trigger_event = mz_convert_ongoing.6054
		}
	}

	option = { #Dislikes carnal rite
		trigger = {
			scope:mz_convert_witchcraft = flag:carnal
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6050_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.6055
		}
	}
}

mz_convert_ongoing.6052 = { #schemer event: traditional success
	type = character_event
	title = mz_convert_ongoing.6050.t
	desc = mz_convert_ongoing.6052.desc

	theme = witchcraft
	override_background = { reference = wilderness }
	left_portrait = { 
		character = scope:owner
		animation = zealous
	}
	right_portrait = { 
		character = scope:target
		animation = personality_bold
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = impressed_opinion
				opinion = 20
			}
		}
		add_learning_lifestyle_xp = major_lifestyle_xp
	}

	option = {
		name = mz_convert_ongoing.6052.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
}

mz_convert_ongoing.6053 = { #schemer event: traditional failure
	type = character_event
	title = mz_convert_ongoing.6050.t
	desc = mz_convert_ongoing.6053.desc

	theme = witchcraft
	override_background = { reference = wilderness }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = disapproval
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = disappointed_opinion
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.6053.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

mz_convert_ongoing.6054 = { #schemer event: carnal success
	type = character_event
	title = mz_convert_ongoing.6050.t
	desc = mz_convert_ongoing.6054.desc

	theme = witchcraft
	override_background = { reference = wilderness }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}			
	}
	right_portrait = { 
		character = scope:target
		animation = flirtation
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}			
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = romance_opinion
				opinion = 20
			}
		}
		mz_owner_convert_sex_effect = yes
	}

	option = {
		name = mz_convert_ongoing.6054.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = success }
	}
	
}

mz_convert_ongoing.6055 = { #schemer event: carnal failure
	type = character_event
	title = mz_convert_ongoing.6050.t
	desc = mz_convert_ongoing.6055.desc

	theme = witchcraft
	override_background = { reference = wilderness }
	left_portrait = { 
		character = scope:owner
		animation = shame
	}
	right_portrait = { 
		character = scope:target
		animation = disgust
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = disgusted_opinion
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.6055.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 1 OUTCOME = failure }
	}
}

### Second Milestone Events

##Venue-based

#Tavern - flirt or admire
mz_convert_ongoing.1001 = { #schemer event - setup
	type = character_event
	title = mz_convert_ongoing.1001.t
	desc = mz_convert_ongoing.1001.desc
	
	theme = seduce_scheme
	override_background = { reference = tavern }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:target = {
			is_available_adult = yes
			NOR = {
				has_trait = shy
				has_trait = reclusive
				has_trait = temperate
			}
		}
		scope:owner = {
			is_available_adult = yes
			NOR = {
				has_trait = shy
				has_trait = reclusive
			}
		}
	}

	option = { #Suggest flirtation
		name = mz_convert_ongoing.1001.a
		save_scope_value_as = {
			name = mz_tavern_girl
			value = flag:flirt
		}
		stress_impact = {
			gregarious = minor_stress_loss
		}
		random_list = {
			50 = {
				#Success!
				desc = mz_convert_ongoing.1001.a.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				modifier = {
					add = 20
					scope:target = {
						OR = { 
							has_trait = lustful
							has_focus = intrigue_temptation_focus
						}
					}
				}
				modifier = {
					add = 50
					scope:target = { has_trait = seducer }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = brave }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1001_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1002
						days = { 2 5 }
					}
				}
			}
			50 = {
				#Failure
				desc = mz_convert_ongoing.1001.a.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = chaste }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = craven }
				}
				modifier = {
					add = 100
					scope:target = { has_sexuality = asexual }
				}
				modifier = {
					add = 40
					scope:target = {
						is_married = yes
						any_spouse = {
							reverse_has_opinion_modifier = {
								target = scope:target
								modifier = love_opinion
							}
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1001_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1002
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 100
				OR = {
					has_trait = lustful
					has_trait = seducer
					has_focus = intrigue_temptation_focus
				}
			}
		}
	}
	option = { #Admire from afar
		name = mz_convert_ongoing.1001.b
		save_scope_value_as = {
			name = mz_tavern_girl
			value = flag:admire
		}
		stress_impact = {
			impatient = minor_stress_gain
			patient = minor_stress_loss
		}
		random_list = {
			75 = {
				#Success!
				desc = mz_convert_ongoing.1001.b.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				modifier = {
					add = 25
					scope:target = {
						OR = { 
							has_trait = calm
							has_trait = content
							has_trait = humble
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1001_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1002
						days = { 2 5 }
					}
				}
			}
			25 = {
				#Failure
				desc = mz_convert_ongoing.1001.b.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				modifier = {
					add = 100
					scope:target = { has_trait = seducer }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = arrogant }
				}
				modifier = {
					add = 20
					scope:target = { 
						OR = {
							has_trait = honest
							has_trait = gregarious
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1001_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1002
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}
	option = { #give up
		name = mz_convert_ongoing.1001.c
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_2_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.1002 = { #target event - placeholder
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = tavern }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	option = { #Likes flirt option
		trigger = {
			scope:mz_tavern_girl = flag:flirt
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1001_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1003
		}
	}
	option = { #disikes flirt option
		trigger = {
			scope:mz_tavern_girl = flag:flirt
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1001_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1004
		}
	}
	option = { #Likes admire option
		trigger = {
			scope:mz_tavern_girl = flag:admire
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1001_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1005
		}
	}
	option = { #disikes admire option
		trigger = {
			scope:mz_tavern_girl = flag:admire
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1001_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1006
		}
	}
}

mz_convert_ongoing.1003 = { #schemer event: flirt success
	type = character_event
	title = mz_convert_ongoing.1001.t
	desc = mz_convert_ongoing.1003.desc

	theme = seduce_scheme
	override_background = { reference = tavern }
	left_portrait = { 
		character = scope:owner
		animation = happiness
	}
	right_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = grateful_opinion
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1003.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.1004 = { #schemer event: flirt failure
	type = character_event
	title = mz_convert_ongoing.1001.t
	desc = mz_convert_ongoing.1004.desc

	theme = seduce_scheme
	override_background = { reference = tavern }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = idle
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.1004.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

mz_convert_ongoing.1005 = { #schemer event: admire success
	type = character_event
	title = mz_convert_ongoing.1001.t
	desc = mz_convert_ongoing.1005.desc

	theme = seduce_scheme
	override_background = { reference = tavern }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = grateful_opinion
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1005.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.1006 = { #schemer event: admire failure
	type = character_event
	title = mz_convert_ongoing.1001.t
	desc = mz_convert_ongoing.1006.desc

	theme = seduce_scheme
	override_background = { reference = tavern }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = dismissal
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = annoyed_opinion
				opinion = -10
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1006.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

## Study together
mz_convert_ongoing.1010 = { #schemer event - setup
	type = character_event
	title = mz_convert_ongoing.1010.t
	desc = mz_convert_ongoing.1010.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = admiration
	}
	right_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:target = {
			is_available_adult = yes
			NOR = {
				has_trait = dull
				has_trait = intellect_bad
			}
			faith = scope:owner.faith #Must be same faith or theologian arguments break down
			mz_lesbian_faith_devotee = no #Wouldn't make sense if lesbians are revered
		}
		scope:owner = {
			is_available_adult = yes
			learning >= decent_skill_rating
			NOR = {
				has_trait = dull
				has_trait = intellect_bad
			}
		}
	}

	option = { #autowin theologian
		name = mz_convert_ongoing.1010.a
		trigger = { 
			scope:target = { is_ai = yes }
			has_trait = theologian 
		}
		trait = theologian
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
		ai_chance = {
			base = 1000
		}
	}

	option = { #autowin scholar
		name = mz_convert_ongoing.1010.b
		trigger = { 
			scope:target = { is_ai = yes }
			has_trait = scholar 
		}
		trait = scholar
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
		ai_chance = {
			base = 1000
		}
	}

	option = { #Theological approach
		name = mz_convert_ongoing.1010.a
		trigger = { 
			NAND = {
				scope:target = { is_ai = yes }
				has_trait = theologian 
			}
		}
		save_scope_value_as = {
			name = mz_study_session
			value = flag:theology
		}
		stress_impact = {
			zealous = minor_stress_loss
			cynical = minor_stress_gain
		}
		duel = {
			skill = learning
			target = scope:target
			30 = {	
				desc = mz_convert_ongoing.1010.a.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -29
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.2
					min = -29
				}
				modifier = {
					add = 5
					piety_level = 2
				}
				modifier = {
					add = 15
					piety_level = 3
				}
				modifier = {
					add = 20
					piety_level = 4
				}
				modifier = {
					add = 25
					piety_level >= 5
				}
				modifier = {
					add = 10
					num_virtuous_traits = 1
				}
				modifier = {
					add = 30
					num_virtuous_traits = 2
				}
				modifier = {
					add = 50
					num_virtuous_traits >= 3
				}
				modifier = {
					add = 20
					has_focus = learning_theology_focus
				}
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1010_outcome
					value = flag:success
				}
				scope:target = { 
					trigger_event = {
						id = mz_convert_ongoing.1011
						days = 3
					}
				}
			}
			30 = {
				desc = mz_convert_ongoing.1010.a.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = -29
				}
				modifier = {
					add = 10
					piety_level = 1
				}
				modifier = {
					add = 20
					piety_level <= 0
				}
				modifier = {
					add = 10
					num_sinful_traits = 1
				}
				modifier = {
					add = 20
					num_sinful_traits = 2
				}
				modifier = {
					add = 30
					num_sinful_traits >= 3
				}
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1010_outcome
					value = flag:failure
				}
				scope:target = { 
					trigger_event = {
						id = mz_convert_ongoing.1011
						days = 3
					}
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 50
				OR = {
					num_virtuous_traits >= 1
					piety_level >= 2
					has_focus = learning_theology_focus
				}
			}
		}
	}

	option = { #Scholarly approach
		name = mz_convert_ongoing.1010.b
		trigger = { 
			NAND = {
				scope:target = { is_ai = yes }
				has_trait = scholar 
			}
		}
		save_scope_value_as = {
			name = mz_study_session
			value = flag:scholarly
		}
		stress_impact = {
			patient = minor_stress_loss
			shrewd = minor_stress_loss
		}
		duel = {
			skill = learning
			target = scope:target
			30 = {	
				desc = mz_convert_ongoing.1010.b.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1.5
					min = -29
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.2
					min = -29
				}
				modifier = {
					add = 10
					has_trait = intellect_good_1
				}
				modifier = {
					add = 20
					has_trait = intellect_good_2
				}
				modifier = {
					add = 30
					has_trait = intellect_good_3
				}
				modifier = {
					add = 15
					has_trait = shrewd
				}
				modifier = {
					add = 20
					has_focus = learning_scholarship_focus
				}
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1010_outcome
					value = flag:success
				}
				scope:target = { 
					trigger_event = {
						id = mz_convert_ongoing.1011
						days = 3
					}
				}
			}
			30 = {
				desc = mz_convert_ongoing.1010.b.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = -29
				}
				modifier = {
					add = 20
					has_trait = stuttering
				}
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1010_outcome
					value = flag:failure
				}
				scope:target = { 
					trigger_event = {
						id = mz_convert_ongoing.1011
						days = 3
					}
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 50
				OR = {
					has_trait = intellect_good
					has_trait = shrewd
					has_focus = learning_scholarship_focus
				}
			}
		}
	}
	
	option = { #give up
		name = mz_convert_ongoing.1010.c
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_2_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.1011 = { #target event - placeholder
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	option = { #Likes theology option
		trigger = {
			scope:mz_study_session = flag:theology
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1010_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1012
		}
	}
	option = { #disikes theology option
		trigger = {
			scope:mz_study_session = flag:theology
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1010_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1013
		}
	}
	option = { #Likes scholarly option
		trigger = {
			scope:mz_study_session = flag:scholarly
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1010_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1014
		}
	}
	option = { #disikes scholarly option
		trigger = {
			scope:mz_study_session = flag:scholarly
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1010_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1015
		}
	}
}

mz_convert_ongoing.1012 = { #schemer event: theology success
	type = character_event
	title = mz_convert_ongoing.1010.t
	desc = mz_convert_ongoing.study_success.desc

	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_character_modifier = { 
				modifier = mz_convert_study_modifier
				years = 5
			}
		}
		scope:owner = {
			add_character_modifier = { 
				modifier = mz_convert_study_modifier
				years = 5
			}
		}
	}

	option = {
		name = mz_convert_ongoing.study_success.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.1013 = { #schemer event: theology failure
	type = character_event
	title = mz_convert_ongoing.1010.t
	desc = mz_convert_ongoing.study_failure.desc

	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = dismissal
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.study_failure.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

mz_convert_ongoing.1014 = { #schemer event: scholarly success
	type = character_event
	title = mz_convert_ongoing.1010.t
	desc = mz_convert_ongoing.study_success.desc

	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_character_modifier = { 
				modifier = mz_convert_study_modifier
				years = 5
			}
		}
		scope:owner = {
			add_character_modifier = { 
				modifier = mz_convert_study_modifier
				years = 5
			}
		}
	}

	option = {
		name = mz_convert_ongoing.study_success.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.1015 = { #schemer event: scholarly failure
	type = character_event
	title = mz_convert_ongoing.1010.t
	desc = mz_convert_ongoing.study_failure.desc

	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = dismissal
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.study_failure.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

## Walk in the Garden - converting a married woman
mz_convert_ongoing.1020 = { #schemer event - setup
	type = character_event
	title = mz_convert_ongoing.1020.t
	desc = mz_convert_ongoing.1020.desc
	
	theme = seduce_scheme
	override_background = { reference = garden }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:target = {
			is_available_adult = yes
			is_married = yes
			any_spouse = {
				count = all
				is_female = no
			}
		}
		scope:owner = {
			is_available_adult = yes
			is_landed = yes
		}
		scope:target.primary_spouse = { #won't target if primary spouse is soulmate
			NOT = { has_relation_soulmate = scope:target }
		}
	}

	immediate = {
		scope:owner = {
			capital_province = {
				barony = {
					save_scope_as = court_location
				}
			}
		}
		scope:target.primary_spouse = { save_scope_as = target_spouse }
	}

	option = { #Diplomacy - dissatisfied with spouse
		name = mz_convert_ongoing.1020.a
		save_scope_value_as = {
			name = mz_garden
			value = flag:diplomacy
		}
		stress_impact = {
			honest = minor_stress_loss
		}
		random_list = {
			60 = {
				#Success!
				desc = mz_convert_ongoing.1020.a.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				compare_modifier = {
					value = diplomacy
					multiplier = 2
				}
				modifier = {
					add = 30
					OR = { 
						has_diplomacy_lifestyle_trait_trigger = yes
						has_lifestyle = diplomacy_lifestyle
					}
				}
				modifier = {
					add = 30
					scope:target = { 
						OR = {
							has_trait = fickle
							has_trait = arbitrary
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1020_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1021
						days = { 2 5 }
					}
				}
			}
			40 = {
				#Failure
				desc = mz_convert_ongoing.1020.a.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				modifier = {
					add = 20
					scope:target.primary_spouse = {
						reverse_has_opinion_modifier = {
							target = scope:target
							modifier = love_opinion
						}
					}
				}
				modifier = {
					add = 20
					scope:target = { 
						OR = {
							has_trait = content
							has_trait = stubborn
						}
					}
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:target.primary_spouse
					multiplier = 0.5
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1020_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1021
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 45
			modifier = {
				add = 45
				OR = {
					has_diplomacy_lifestyle_trait_trigger = yes
					has_lifestyle = diplomacy_lifestyle
				}
				ai_rationality > 0
			}
		}
	}

	option = { #Intrigue - seduction option
		name = mz_convert_ongoing.1020.b
		save_scope_value_as = {
			name = mz_garden
			value = flag:intrigue
		}
		stress_impact = {
			chaste = medium_stress_gain
			lustful = medium_stress_loss
			rakish = minor_stress_loss
		}
		random_list = {
			60 = {
				#Success!
				desc = mz_convert_ongoing.1020.b.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				min = 5
				compare_modifier = {
					value = intrigue
					multiplier = 2
				}
				modifier = {
					add = 30
					OR = { 
						has_trait = seducer
						has_focus = intrigue_temptation_focus
					}
				}
				modifier = {
					add = 20
					scope:target = { has_trait = lustful }
				}
				modifier = {
					add = {
						value = attraction
						multiply = 1
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1020_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1021
						days = { 2 5 }
					}
				}
			}
			40 = {
				#Failure
				desc = mz_convert_ongoing.1020.b.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				min = 5
				modifier = {
					add = 20
					scope:target.primary_spouse = {
						has_relation_lover = scope:target
					}
				}
				modifier = {
					add = 50
					scope:target = { has_trait = chaste }
				}
				modifier = {
					add = 100
					scope:target = { has_sexuality = asexual }
				}
				modifier = {
					add = {
						value = attraction
						multiply = -1
					}
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:target.primary_spouse
					multiplier = 0.5
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1020_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1021
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 45
			modifier = {
				add = 45
				OR = {
					has_trait = seducer
					has_focus = intrigue_temptation_focus
				}
				ai_rationality > 0
			}
		}
	}
	
	option = { #give up
		name = mz_convert_ongoing.1020.c
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_2_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.1021 = { #target event - placeholder
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = garden }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	option = { #Likes theology option
		trigger = {
			scope:mz_garden = flag:diplomacy
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1020_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1022
		}
	}
	option = { #disikes theology option
		trigger = {
			scope:mz_garden = flag:diplomacy
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1020_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1023
		}
	}
	option = { #Likes scholarly option
		trigger = {
			scope:mz_garden = flag:intrigue
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1020_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1024
		}
	}
	option = { #disikes scholarly option
		trigger = {
			scope:mz_garden = flag:intrigue
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1020_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1025
		}
	}
}

mz_convert_ongoing.1022 = { #schemer event: diplomacy success
	type = character_event
	title = mz_convert_ongoing.1020.t
	desc = mz_convert_ongoing.1022.desc

	theme = seduce_scheme
	override_background = { reference = garden }
	left_portrait = { 
		character = scope:owner
		animation = admiration
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = trust_opinion
				target = scope:owner
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1022.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.1023 = { #schemer event: diplomacy failure
	type = character_event
	title = mz_convert_ongoing.1020.t
	desc = mz_convert_ongoing.1023.desc

	theme = seduce_scheme
	override_background = { reference = garden }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = dismissal
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1023.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

mz_convert_ongoing.1024 = { #schemer event: intrigue success
	type = character_event
	title = mz_convert_ongoing.1020.t
	desc = mz_convert_ongoing.1024.desc

	theme = seduce_scheme
	override_background = { reference = garden }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = romance_opinion
				target = scope:owner
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1024.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.1025 = { #schemer event: intrigue failure
	type = character_event
	title = mz_convert_ongoing.1020.t
	desc = mz_convert_ongoing.1025.desc

	theme = seduce_scheme
	override_background = { reference = garden }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = disgust
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = disgusted_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1025.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

## Bathhouse musings - showing some interest?
mz_convert_ongoing.1030 = { #schemer event - setup
	type = character_event
	title = mz_convert_ongoing.1030.t
	desc = mz_convert_ongoing.1030.desc
	
	theme = seduce_scheme
	override_background  = { reference = bath_house }
	override_effect_2d = {
		reference = smoke	
	}
	left_portrait = { 
		character = scope:owner
		animation = happiness
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}		
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}		
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:target = {
			is_available_adult = yes
			age >= 18
		}
		scope:owner = {
			is_available_adult = yes
			is_landed = yes
			age >= 18
			capital_province = {
				county = { development_level >= 20 }
			}
		}
	}

	immediate = {
		scope:owner = {
			capital_province = {
				barony = {
					save_scope_as = court_location
				}
			}
			stress_impact = {
				base = medium_stress_loss
			}
		}
		scope:target = {
			stress_impact = {
				base = medium_stress_loss
			}
		}
	}

	option = { #Conversation
		name = mz_convert_ongoing.1030.a
		save_scope_value_as = {
			name = mz_bathhouse
			value = flag:conversation
		}
		stress_impact = {
			gregarious = minor_stress_loss
			shy = minor_stress_gain
		}
		random_list = {
			70 = {
				#Success!
				desc = mz_convert_ongoing.1030.a.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				compare_modifier = {
					value = diplomacy
					multiplier = 0.75
				}
				compare_modifier = {
					value = learning
					multiplier = 0.75
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.2
				}
				modifier = {
					add = 20
					scope:target = { has_trait = gregarious }
				}
				modifier = {
					add = 20
					has_trait = gregarious
				}
				modifier = {
					add = 20
					scope:target = { has_trait = honest }
				}
				modifier = {
					add = 20
					OR = { 
						has_lifestyle = diplomacy_lifestyle
						has_diplomacy_lifestyle_trait_trigger = yes
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1030_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1031
						days = { 2 5 }
					}
				}
			}
			30 = {
				#Failure
				desc = mz_convert_ongoing.1030.a.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = shy }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = deceitful }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1030_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1031
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 45
			modifier = {
				add = 45
				OR = {
					has_trait = gregarious
					has_trait = honest
				}
				ai_rationality > 0
			}
		}
	}
	option = { #Teasing
		name = mz_convert_ongoing.1030.b
		save_scope_value_as = {
			name = mz_bathhouse
			value = flag:teasing
		}
		stress_impact = {
			base = minor_stress_loss
			shy = minor_stress_gain
		}
		random_list = {
			50 = {
				#Success!
				desc = mz_convert_ongoing.1030.b.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				compare_modifier = {
					value = diplomacy
					multiplier = 1
				}
				compare_modifier = {
					value = intrigue
					multiplier = 1
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.2
				}
				modifier = {
					add = 20
					scope:target = { has_relation_friend = scope:owner }
				}
				modifier = {
					add = 50
					scope:target = { has_relation_best_friend = scope:owner }
				}
				modifier = {
					add = 20
					has_trait = gregarious
				}
				modifier = {
					add = 50
					scope:target = { 
						has_opinion_modifier = {
							target = scope:owner
							modifier = friendliness_opinion
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1030_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1031
						days = { 2 5 }
					}
				}
			}
			50 = {
				#Failure
				desc = mz_convert_ongoing.1030.b.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = -0.2
				}
				modifier = {
					add = 50
					scope:target = { has_trait = irritable }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = shy }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = wrathful }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = impatient }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1030_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1031
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 45
			modifier = {
				add = 45
				OR = {
					has_trait = gregarious
					has_trait = honest
				}
				ai_rationality > 0
			}
		}
	}
	option = { #give up
		name = mz_convert_ongoing.1030.c
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_2_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.1031 = { #target event - placeholder
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background  = { reference = bath_house }
	override_effect_2d = {
		reference = smoke	
	}
	left_portrait = { 
		character = scope:owner
		animation = happiness
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}		
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	option = { #Likes conversation
		trigger = {
			scope:mz_bathhouse = flag:conversation
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1030_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1032
		}
	}
	option = { #disikes conversation
		trigger = {
			scope:mz_bathhouse = flag:conversation
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1030_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1033
		}
	}
	option = { #Likes teasing
		trigger = {
			scope:mz_bathhouse = flag:teasing
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1030_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1034
		}
	}
	option = { #disikes teasing
		trigger = {
			scope:mz_bathhouse = flag:teasing
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1030_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1035
		}
	}
}

mz_convert_ongoing.1032 = { #schemer event: conversation success
	type = character_event
	title = mz_convert_ongoing.1030.t
	desc = mz_convert_ongoing.1032.desc

	theme = seduce_scheme
	override_background  = { reference = bath_house }
	override_effect_2d = {
		reference = smoke	
	}
	left_portrait = { 
		character = scope:owner
		animation = admiration
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}			
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}			
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				modifier = friendliness_opinion
				target = scope:owner
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1032.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.1033 = { #schemer event: conversation failure
	type = character_event
	title = mz_convert_ongoing.1030.t
	desc = mz_convert_ongoing.1033.desc

	theme = seduce_scheme
	override_background  = { reference = bath_house }
	override_effect_2d = {
		reference = smoke	
	}
	left_portrait = { 
		character = scope:owner
		animation = stress
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}			
	}
	right_portrait = { 
		character = scope:target
		animation = dismissal
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}			
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1033.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

mz_convert_ongoing.1034 = { #schemer event: teasing success
	type = character_event
	title = mz_convert_ongoing.1030.t
	desc = mz_convert_ongoing.1034.desc

	theme = seduce_scheme
	override_background  = { reference = bath_house }
	override_effect_2d = {
		reference = smoke	
	}
	left_portrait = { 
		character = scope:owner
		animation = admiration
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}			
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}			
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				modifier = friendliness_opinion
				target = scope:owner
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1034.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.1035 = { #schemer event: teasing failure
	type = character_event
	title = mz_convert_ongoing.1030.t
	desc = mz_convert_ongoing.1035.desc

	theme = seduce_scheme
	override_background  = { reference = bath_house }
	override_effect_2d = {
		reference = smoke	
	}
	left_portrait = { 
		character = scope:owner
		animation = stress
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}			
	}
	right_portrait = { 
		character = scope:target
		animation = dismissal
		triggered_outfit = { # Standard nudity
			trigger = { age >= 18 }
			outfit_tags = { no_clothes }
		}			
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1035.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

## Dancing at the Ball - scandalous dance or watching the dancers
mz_convert_ongoing.1040 = { #schemer event - setup
	type = character_event
	title = mz_convert_ongoing.1040.t
	desc = {
		triggered_desc = {
			trigger = { scope:target = { is_married = yes } }
			desc = mz_convert_ongoing.1040.desc.married
		}
		triggered_desc = {
			trigger = { scope:target = { is_married = no } }
			desc = mz_convert_ongoing.1040.desc.unmarried
		}
	}
	
	theme = seduce_scheme
	override_background = { reference = throne_room }
	right_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:target = {
			is_available_adult = yes
			age <= 60
			opinion = {
				target = scope:owner
				value >= 50
			}
			OR = {
				is_married = no
				AND = {
					is_married = yes
					opinion = {
						target = scope:target.primary_spouse
						value <= 20
					}
				}
			}
		}
		scope:owner = {
			is_available_adult = yes
			is_landed = yes
			age <= 60
		}
	}

	immediate = {
		scope:owner = {
			capital_province = {
				barony = {
					save_scope_as = court_location
				}
			}
		}
	}

	option = { #Scandalous dance
		name = mz_convert_ongoing.1040.a
		save_scope_value_as = {
			name = mz_ball_dance
			value = flag:scandal
		}
		stress_impact = {
			arrogant = medium_stress_loss
		}
		random_list = {
			50 = {
				#Success!
				desc = mz_convert_ongoing.1040.a.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
					add_character_modifier = {
						modifier = mz_scandalous_dance_modifier
						years = 5
					}
					add_prestige = -100
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.5
				}
				modifier = {
					add = 15
					highest_held_title_tier >= 5
				}
				modifier = {
					add = 10
					highest_held_title_tier >= 4
				}
				modifier = {
					add = 5
					highest_held_title_tier >= 3
				}
				modifier = {
					add = 20
					prestige_level >= 4
				}
				modifier = {
					add = 20
					AND = {
						exists = dynasty
						dynasty = { dynasty_prestige_level >= 4 }
					}
				}
				modifier = {
					add = 25
					scope:target = { 
						OR = {
							AND = {
								scope:target = { personal_scheme_success_compare_target_liege_tier_trigger = yes }
								scope:owner.highest_held_title_tier > scope:target.liege.highest_held_title_tier
							}
							AND = {
								scope:target = { personal_scheme_success_compare_target_liege_tier_trigger = no }
								scope:owner.highest_held_title_tier > scope:target.highest_held_title_tier
							}
						}
					}
				}
				modifier = {
					add = 25
					scope:target = { 
						OR = { 
							has_trait = ambitious
							has_trait = greedy
							has_trait = arrogant
						}
						OR = {
							AND = {
								scope:target = { personal_scheme_success_compare_target_liege_tier_trigger = yes }
								scope:owner.highest_held_title_tier > scope:target.liege.highest_held_title_tier
							}
							AND = {
								scope:target = { personal_scheme_success_compare_target_liege_tier_trigger = no }
								scope:owner.highest_held_title_tier > scope:target.highest_held_title_tier
							}
						}
					}
				}
				modifier = {
					add = 20
					scope:target = { 
						OR = {
							has_trait = fickle
							has_trait = arbitrary
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1040_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1041
						days = { 3 7 }
					}
				}
			}
			50 = {
				#Failure
				desc = mz_convert_ongoing.1040.a.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				modifier = {
					add = 20
					prestige_level < 2
				}
				modifier = {
					add = 20
					AND = {
						exists = dynasty
						dynasty = { dynasty_prestige_level < 2 }
					}
				}
				modifier = {
					add = 20
					scope:target = { has_trait = chaste }
				}
				modifier = {
					add = 100
					scope:target = { has_sexuality = asexual }
				}
				modifier = {
					add = 20
					scope:target = { 
						OR = {
							has_trait = content
							has_trait = stubborn
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1040_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1041
						days = { 3 7 }
					}
				}
			}
		}
		ai_chance = {
			base = 45
			modifier = {
				add = 45
				OR = {
					highest_held_title_tier >= 4
					prestige_level >= 4
				}
				ai_rationality > 0
			}
		}
	}

	option = { #Watch the dancers
		name = mz_convert_ongoing.1040.b
		save_scope_value_as = {
			name = mz_ball_dance
			value = flag:watch
		}
		stress_impact = {
			shy = minor_stress_loss
		}
		random_list = {
			75 = {
				#Success!
				desc = mz_convert_ongoing.1040.b.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.5
				}
				modifier = {
					add = 50
					scope:target = { 
						OR = { 
							has_trait = shy 
							has_trait = content
						}
					}
				}
				modifier = {
					add = 20
					scope:target = { has_trait = gregarious }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = chaste }
				}
				modifier = {
					add = 100
					scope:target = { has_sexuality = asexual }
				}
				modifier = {
					add = 30
					OR = { 
						has_lifestyle = diplomacy_lifestyle
						has_diplomacy_lifestyle_trait_trigger = yes
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_1040_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1041
						days = { 3 7 }
					}
				}
			}
			25 = {
				#Failure
				desc = mz_convert_ongoing.1040.b.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				
				save_scope_value_as = {
					name = mz_convert_ongoing_1040_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.1041
						days = { 3 7 }
					}
				}
			}
		}
		ai_chance = {
			base = 45
			modifier = {
				add = 45
				OR = { 
					has_lifestyle = diplomacy_lifestyle
					has_diplomacy_lifestyle_trait_trigger = yes
				}
				ai_rationality > 0
			}
		}
	}	
	option = { #give up
		name = mz_convert_ongoing.1020.c
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_2_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.1041 = { #target event - placeholder
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = throne_room }
	left_portrait = { 
		character = scope:owner
		animation = admiration
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	option = { #Likes dance
		trigger = {
			scope:mz_ball_dance = flag:scandal
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1040_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = {
			modifier = mz_scandalous_dance_modifier
			years = 5
		}
		add_prestige = -100
		scope:owner = {
			trigger_event = mz_convert_ongoing.1042
		}
	}
	option = { #disikes dance
		trigger = {
			scope:mz_ball_dance = flag:scandal
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1040_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1043
		}
	}
	option = { #Likes dancers
		trigger = {
			scope:mz_ball_dance = flag:watch
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1040_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1044
		}
	}
	option = { #disikes dancers
		trigger = {
			scope:mz_ball_dance = flag:watch
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_1040_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.1045
		}
	}
}

mz_convert_ongoing.1042 = { #schemer event: dance success
	type = character_event
	title = mz_convert_ongoing.1040.t
	desc = mz_convert_ongoing.1042.desc

	theme = seduce_scheme
	override_background = { reference = throne_room }
	left_portrait = { 
		character = scope:owner
		animation = admiration
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		add_character_modifier = {
			modifier = mz_scandalous_dance_modifier
			years = 5
		}
		add_prestige = -100
	}

	option = {
		name = mz_convert_ongoing.1042.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.1043 = { #schemer event: dance failure
	type = character_event
	title = mz_convert_ongoing.1040.t
	desc = mz_convert_ongoing.1043.desc

	theme = seduce_scheme
	override_background = { reference = throne_room }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = disgust
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = insult_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1043.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

mz_convert_ongoing.1044 = { #schemer event: dance success
	type = character_event
	title = mz_convert_ongoing.1040.t
	desc = mz_convert_ongoing.1044.desc

	theme = seduce_scheme
	override_background = { reference = throne_room }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = friendliness_opinion
				target = scope:owner
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1044.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.1045 = { #schemer event: dance failure
	type = character_event
	title = mz_convert_ongoing.1040.t
	desc = mz_convert_ongoing.1045.desc

	theme = seduce_scheme
	override_background = { reference = throne_room }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = dismissal
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = insult_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.1045.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

## Seducing the target (fallback)
mz_convert_ongoing.3050 = { #schemer event - setup
	type = character_event
	title = mz_convert_ongoing.3050.t
	desc = mz_convert_ongoing.3050.desc
	
	theme = seduce_scheme
	override_background = { reference = corridor_day }
	right_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:target = {
			is_available_adult = yes
		}
		scope:owner = {
			is_available_adult = yes
			is_landed = yes
		}
	}

	immediate = {
		scope:owner = {
			capital_province = {
				barony = {
					save_scope_as = court_location
				}
			}
		}
	}

	option = { #Seducer wins automatically
		name = mz_convert_ongoing.3050.seducer
		trigger = { has_trait = seducer }
		trait = seducer
		show_as_tooltip = { 
			mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
		}
		scope:owner = {
			trigger_event = mz_convert_ongoing.3056
		}
		ai_chance = {
			base = 1000
		}
	}

	option = { #Use flirtateous language
		name = mz_convert_ongoing.3050.a
		trigger = {
			NOT = { has_trait = seducer }
		}
		stress_impact = {
			gregarious = minor_stress_loss
			lustful = minor_stress_gain
		}
		save_scope_value_as = {
			name = mz_seduction
			value = flag:flirt
		}
		random_list = {
			60 = {
				#Success!
				desc = mz_convert_ongoing.3050.a.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.5
					min = -49
				}
				compare_modifier = {
					value = diplomacy
					multiplier = 1.5
				}
				modifier = {
					add = 30
					scope:target = { 
						OR = {
							has_trait = lustful
							has_trait = rakish
						}
					}
				}
				modifier = {
					add = 20
					OR = {
						has_lifestyle = diplomacy_lifestyle
						has_diplomacy_lifestyle_trait_trigger = yes
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3050_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3051
						days = { 2 5 }
					}
				}
			}
			40 = {
				#Failure
				desc = mz_convert_ongoing.3050.a.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = chaste }
				}
				modifier = {
					add = 100
					scope:target = { has_sexuality = asexual }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3050_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3051
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 60
				OR = {
					diplomacy >= average_skill_rating
				}
				ai_rationality > 0
			}
		}
	}

	option = { #recite love poetry
		name = mz_convert_ongoing.3050.b
		trigger = {
			NOT = { has_trait = seducer }
		}
		save_scope_value_as = {
			name = mz_seduction
			value = flag:poetry
		}
		stress_impact = {
			impatient = minor_stress_gain
			lustful = minor_stress_gain
			chaste = minor_stress_loss
		}
		random_list = {
			60 = {
				#Success!
				desc = mz_convert_ongoing.3050.b.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.5
					min = -49
				}
				compare_modifier = {
					value = learning
					multiplier = 1.5
				}
				modifier = {
					add = 30
					scope:target = { 
						OR = {
							has_trait = lustful
							has_trait = rakish
						}
					}
				}
				modifier = {
					add = 40
					OR = {
						scope:target = { 
							OR = {
								has_lifestyle = learning_lifestyle
								has_learning_lifestyle_trait_trigger = yes
							}
						}
						OR = {
							has_lifestyle = learning_lifestyle
							has_learning_lifestyle_trait_trigger = yes
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3050_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3051
						days = { 2 5 }
					}
				}
			}
			40 = {
				#Failure
				desc = mz_convert_ongoing.3050.b.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = chaste }
				}
				modifier = {
					add = 100
					scope:target = { has_sexuality = asexual }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3050_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3051
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 60
				OR = {
					learning >= average_skill_rating
				}
				ai_rationality > 0
			}
		}
	}
	
	option = { #use your body
		name = mz_convert_ongoing.3050.c
		trigger = {
			NOT = { has_trait = seducer }
		}
		save_scope_value_as = {
			name = mz_seduction
			value = flag:body
		}
		stress_impact = {
			lustful = medium_stress_loss
			chaste = medium_stress_gain
			rakish = minor_stress_loss
		}
		random_list = {
			60 = {
				#Success!
				desc = mz_convert_ongoing.3050.c.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				min = 5
				modifier = {
					add = {
						value = attraction
						multiply = 1
					}
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.5
					min = -49
				}
				modifier = {
					add = 30
					scope:target = { 
						OR = {
							has_trait = lustful
							has_trait = rakish
						}
					}
				}
				modifier = {
					add = 40
					OR = {
						scope:target = { has_focus = intrigue_temptation_focus }
						has_focus = intrigue_temptation_focus
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3050_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3051
						days = { 2 5 }
					}
				}
			}
			40 = {
				#Failure
				desc = mz_convert_ongoing.3050.c.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				min = 5
				modifier = {
					add = {
						value = attraction
						multiply = -1
					}
				}
				modifier = {
					add = 20
					scope:target = { has_trait = chaste }
				}
				modifier = {
					add = 100
					scope:target = { has_sexuality = asexual }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_3050_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.3051
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 60
				has_trait = beauty_good
				ai_rationality > 0
			}
		}
	}
	
	option = { #give up
		name = mz_convert_ongoing.3050.d
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_2_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.3051 = { #target event - placeholder
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = corridor_day }
	right_portrait = { 
		character = scope:target
		animation = happiness
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	option = { #fliratation success
		trigger = {
			scope:mz_seduction = flag:flirt
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3050_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.3052
		}
	}
	option = { #flirtation failure
		trigger = {
			scope:mz_seduction = flag:flirt
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3050_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.3053
		}
	}
	option = { #poetry success
		trigger = {
			scope:mz_seduction = flag:poetry
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3050_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.3054
		}
	}
	option = { #poetry failure
		trigger = {
			scope:mz_seduction = flag:poetry
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3050_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.3055
		}
	}
	option = { #attraction success
		trigger = {
			scope:mz_seduction = flag:body
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3050_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.3056
		}
	}
	option = { #attraction failure
		trigger = {
			scope:mz_seduction = flag:body
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_3050_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.3057
		}
	}
}

mz_convert_ongoing.3052 = { #schemer event: flirt success
	type = character_event
	title = mz_convert_ongoing.3050.t
	desc = mz_convert_ongoing.3052.desc

	theme = seduce_scheme
	override_background = { reference = feast }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = compliment_opinion
				target = scope:owner
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.3052.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.3053 = { #schemer event: flirt failure
	type = character_event
	title = mz_convert_ongoing.3050.t
	desc = mz_convert_ongoing.3053.desc

	theme = seduce_scheme
	override_background = { reference = feast }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = dismissal
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = insult_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.3053.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

mz_convert_ongoing.3054 = { #schemer event: poetry success
	type = character_event
	title = mz_convert_ongoing.3050.t
	desc = mz_convert_ongoing.3052.desc

	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = admiration
	}
	right_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = romance_opinion
				target = scope:owner
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.3054.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.3055 = { #schemer event: poetry failure
	type = character_event
	title = mz_convert_ongoing.3050.t
	desc = mz_convert_ongoing.3055.desc

	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = worry
	}
	right_portrait = { 
		character = scope:target
		animation = stress
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.3055.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

mz_convert_ongoing.3056 = { #schemer event: attraction success
	type = character_event
	title = mz_convert_ongoing.3050.t
	desc = mz_convert_ongoing.3056.desc

	theme = seduce_scheme
	override_background = { reference = bedchamber }
	left_portrait = { 
		character = scope:owner
		animation = admiration
	}
	right_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = pleased_opinion
				target = scope:owner
				opinion = 20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.3056.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.3057 = { #schemer event: attraction failure
	type = character_event
	title = mz_convert_ongoing.3050.t
	desc = mz_convert_ongoing.3057.desc

	theme = seduce_scheme
	override_background = { reference = bedchamber }
	left_portrait = { 
		character = scope:owner
		animation = shame
	}
	right_portrait = { 
		character = scope:target
		animation = disgust
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = disgusted_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.3057.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

## Skill-based events
# Both martial
mz_convert_ongoing.6010 = {
	type = character_event
	title = mz_convert_ongoing.6010.t
	desc = mz_convert_ongoing.6010.desc
	
	theme = seduce_scheme
	override_background = { reference = army_camp }
	right_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:target = {
			martial >= high_skill_rating
		}
		scope:owner = {
			martial >= high_skill_rating
			is_landed = yes
		}
	}

	immediate = {
		scope:owner = {
			capital_province = {
				barony = {
					save_scope_as = court_location
				}
			}
		}
	}

	option = { #Strategist wins automatically
		name = mz_convert_ongoing.6010.a
		trigger = { has_trait = strategist }
		trait = strategist
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
		ai_chance = {
			base = 1000
		}
	}
	option = { #Brilliant strategist wins automatically
		name = mz_convert_ongoing.6010.a
		trigger = { 
			has_trait = education_martial_4 
			NOT = { has_trait = strategist }
		}
		trait = education_martial_4
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
		ai_chance = {
			base = 1000
		}
	}
	option = { #Overseer wins automatically
		name = mz_convert_ongoing.6010.b
		trigger = { has_trait = overseer }
		trait = overseer
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
		ai_chance = {
			base = 1000
		}
	}
	option = { #Gallant wins automatically
		name = mz_convert_ongoing.6010.c
		trigger = { has_trait = gallant }
		trait = gallant
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
		ai_chance = {
			base = 1000
		}
	}

	option = { #Discuss strategy
		name = mz_convert_ongoing.6010.a
		trigger = {
			NOR = { 
				has_trait = strategist
				has_trait = education_martial_4
			}
		}
		save_scope_value_as = {
			name = mz_shared_martial
			value = flag:strategy
		}
		random_list = {
			60 = {
				#Success!
				desc = mz_convert_ongoing.6010.a.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.5
					min = -59
				}
				compare_modifier = {
					value = martial
					multiplier = 1
				}
				modifier = {
					add = 20
					diplomacy >= average_skill_rating
				}
				modifier = {
					add = 40
					number_of_commander_traits > 0
					scope:target = { number_of_commander_traits > 0 }
					number_of_commander_traits_in_common = {
						target = scope:target
						value > 0
					}
				}
				modifier = {
					add = 40
					scope:target = { 
						OR = {
							has_trait = strategist
							has_focus = martial_strategy_focus
						}
					}
				}
				modifier = {
					add = 20
					scope:target = { has_trait = patient }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6010_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6011
						days = { 2 5 }
					}
				}
			}
			40 = {
				#Failure
				desc = mz_convert_ongoing.6010.a.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				modifier = {
					add = 40
					diplomacy < low_skill_rating
				}
				modifier = {
					add = 40
					learning < low_skill_rating
				}
				modifier = {
					add = 20
					scope:target = { has_trait = wrathful }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = impatient }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = fickle }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6010_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6011
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 60
				OR = {
					learning >= average_skill_rating
					has_trait = patient
				}
				ai_rationality > 0
			}
		}
	}

	option = { #Discuss control
		name = mz_convert_ongoing.6010.b
		trigger = {
			NOT = { has_trait = overseer }
		}
		save_scope_value_as = {
			name = mz_shared_martial
			value = flag:overseer
		}
		random_list = {
			60 = {
				#Success!
				desc = mz_convert_ongoing.6010.b.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.5
					min = -59
				}
				compare_modifier = {
					value = martial
					multiplier = 1
				}
				modifier = {
					add = 20
					intrigue >= average_skill_rating
				}
				modifier = {
					add = 40
					dread > 50
				}
				modifier = {
					add = 40
					scope:target = { 
						OR = {
							has_trait = overseer
							has_focus = martial_authority_focus
						}
					}
				}
				modifier = {
					add = 20
					scope:target = { 
						OR = { 
							has_trait = sadistic 
							has_trait = callous
						}
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6010_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6011
						days = { 2 5 }
					}
				}
			}
			40 = {
				#Failure
				desc = mz_convert_ongoing.6010.b.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				modifier = {
					add = 30
					intrigue < low_skill_rating
				}
				modifier = {
					add = 30
					dread < 21
				}
				modifier = {
					add = 20
					scope:target = { has_trait = compassionate }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = generous }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = just }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6010_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6011
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 60
				OR = {
					intrigue >= average_skill_rating
					dread >= 21
				}
				ai_rationality > 0
			}
		}
	}

	option = { #Discuss chivalry
		name = mz_convert_ongoing.6010.c
		trigger = {
			NOT = { has_trait = gallant }
		}
		save_scope_value_as = {
			name = mz_shared_martial
			value = flag:gallant
		}
		random_list = {
			60 = {
				#Success!
				desc = mz_convert_ongoing.6010.c.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				min = 5
				modifier = {
					add = {
						value = attraction
						multiply = 0.25
					}
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.5
					min = -59
				}
				compare_modifier = {
					value = martial
					multiplier = 1
				}
				modifier = {
					add = 30
					prowess >= average_skill_rating
				}
				modifier = {
					add = 40
					scope:target = { 
						OR = {
							has_trait = gallant
							has_focus = martial_chivalry_focus
						}
					}
				}
				modifier = {
					add = 20
					scope:target = { has_trait = brave }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = lustful }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6010_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6011
						days = { 2 5 }
					}
				}
			}
			40 = {
				#Failure
				desc = mz_convert_ongoing.6010.c.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				min = 5
				modifier = {
					add = {
						value = attraction
						multiply = -0.25
					}
				}
				modifier = {
					add = 40
					prowess < low_skill_rating
				}
				modifier = {
					add = 20
					scope:target = { has_trait = arrogant }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = arbitrary }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = vengeful }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6010_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6011
						days = { 2 5 }
					}
				}
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 60
				OR = {
					prowess >= average_skill_rating
					attraction >= low_positive_attraction
				}
				ai_rationality > 0
			}
		}
	}
	
	option = { #give up
		name = mz_convert_ongoing.6010.d
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_2_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.6011 = { #target event - placeholder
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = army_camp }
	right_portrait = { 
		character = scope:target
		animation = happiness
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	option = { #strategy success
		trigger = {
			scope:mz_shared_martial = flag:strategy
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6010_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		random_list = {
			70 = { 
				add_character_modifier = { 
					modifier = mz_discussed_strategy_modifier
					years = 5
				}
			}
			30 = { add_martial_lifestyle_xp = major_lifestyle_xp }
		}
		scope:owner = {
			trigger_event = mz_convert_ongoing.6012
		}
	}
	option = { #strategy failure
		trigger = {
			scope:mz_shared_martial = flag:strategy
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6010_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.6013
		}
	}
	option = { #control success
		trigger = {
			scope:mz_shared_martial = flag:overseer
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6010_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		random_list = {
			70 = { 
				add_character_modifier = { 
					modifier = mz_discussed_control_modifier
					years = 5
				}
			}
			30 = { add_martial_lifestyle_xp = major_lifestyle_xp }
		}
		scope:owner = {
			trigger_event = mz_convert_ongoing.6014
		}
	}
	option = { #control failure
		trigger = {
			scope:mz_shared_martial = flag:overseer
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6010_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.6015
		}
	}
	option = { #gallant success
		trigger = {
			scope:mz_shared_martial = flag:gallant
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6010_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		random_list = {
			70 = { 
				add_character_modifier = { 
					modifier = mz_discussed_gallantry_modifier
					years = 5
				}
			}
			30 = { add_martial_lifestyle_xp = major_lifestyle_xp }
		}
		scope:owner = {
			trigger_event = mz_convert_ongoing.6016
		}
	}
	option = { #gallant failure
		trigger = {
			scope:mz_shared_martial = flag:gallant
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6010_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.6017
		}
	}
}

mz_convert_ongoing.6012 = { #schemer event: strategy success
	type = character_event
	title = mz_convert_ongoing.6010.t
	desc = mz_convert_ongoing.6012.desc

	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:owner = { 
			random_list = {
				70 = { 
					add_character_modifier = { 
						modifier = mz_discussed_strategy_modifier
						years = 5
					}
				}
				30 = { add_martial_lifestyle_xp = major_lifestyle_xp }
			}
		}
	}

	option = {
		name = mz_convert_ongoing.6012.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.6013 = { #schemer event: strategy failure
	type = character_event
	title = mz_convert_ongoing.6010.t
	desc = mz_convert_ongoing.6013.desc

	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = bored_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.6013.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

mz_convert_ongoing.6014 = { #schemer event: control success
	type = character_event
	title = mz_convert_ongoing.6010.t
	desc = mz_convert_ongoing.6014.desc

	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:owner = { 
			random_list = {
				70 = { 
					add_character_modifier = { 
						modifier = mz_discussed_control_modifier
						years = 5
					}
				}
				30 = { add_martial_lifestyle_xp = major_lifestyle_xp }
			}
		}
	}

	option = {
		name = mz_convert_ongoing.6014.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.6015 = { #schemer event: control failure
	type = character_event
	title = mz_convert_ongoing.6010.t
	desc = mz_convert_ongoing.6015.desc

	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = bored_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.6015.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

mz_convert_ongoing.6016 = { #schemer event: gallantry success
	type = character_event
	title = mz_convert_ongoing.6010.t
	desc = mz_convert_ongoing.6016.desc

	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:owner = { 
			random_list = {
				70 = { 
					add_character_modifier = { 
						modifier = mz_discussed_gallantry_modifier
						years = 5
					}
				}
				30 = { add_martial_lifestyle_xp = major_lifestyle_xp }
			}
		}
	}

	option = {
		name = mz_convert_ongoing.6016.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.6017 = { #schemer event: gallantry failure
	type = character_event
	title = mz_convert_ongoing.6010.t
	desc = mz_convert_ongoing.6017.desc

	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = bored_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.6017.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

# Both high prowess - dueling

mz_convert_ongoing.6020 = {
	type = character_event
	title = mz_convert_ongoing.6020.t
	desc = mz_convert_ongoing.6020.desc
	
	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = { 
		character = scope:owner
		animation = personality_bold
	}
	right_portrait = { 
		character = scope:target
		animation = personality_honorable
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:target = {
			prowess >= average_skill_rating
		}
		scope:owner = {
			is_landed = yes
			prowess >= average_skill_rating
		}
	}

	immediate = {
		scope:owner = {
			capital_province = {
				barony = {
					save_scope_as = court_location
				}
			}
		}
		stress_impact = {
			craven = major_stress_gain
			paranoid = major_stress_gain
		}
	}

	option = { #Blademaster 3 wins automatically
		name = mz_convert_ongoing.6020.blademaster
		trigger = { 
			has_trait = lifestyle_blademaster 
			has_trait_xp = {
				trait = lifestyle_blademaster
				value >= 100
			}
		}
		trait = lifestyle_blademaster
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
		ai_chance = {
			base = 1000
		}
	}

	option = { #Duel
		name = mz_convert_ongoing.6020.a
		custom_tooltip = mz_convert_ongoing.6020.a.tt
		trigger = {
			NAND = { 
				has_trait = lifestyle_blademaster 
				has_trait_xp = {
					trait = lifestyle_blademaster
					value >= 100
				}
			}
		}
		duel = {
			skill = prowess
			target = scope:target
			20 = {	
				desc = mz_convert_ongoing.6020.a.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -19
				}
				custom_tooltip = mz_convert_ongoing.6020.a.tt_win
				add_prestige = 150
				save_scope_value_as = {
					name = mz_prowess_duel
					value = flag:owner_win
				}
				scope:target = { 
					trigger_event = {
						id = mz_convert_ongoing.6021
						days = 3
					}
				}
			}
			20 = {
				desc = mz_convert_ongoing.6020.a.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = -19
				}
				custom_tooltip = mz_convert_ongoing.6020.a.tt_lose
				add_prestige = -150
				save_scope_value_as = {
					name = mz_prowess_duel
					value = flag:owner_lose
				}
				scope:target = { 
					trigger_event = {
						id = mz_convert_ongoing.6021
						days = 3
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = { #Focus on the duel
		name = mz_convert_ongoing.6020.b
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_2_event
				value = yes
			}
		}
		random_list = {
			50 = {
				modifier = { 
					has_trait = lifestyle_blademaster
					has_trait_xp = {
						trait = lifestyle_blademaster
						value >= 100
					}
					add = -50 
				}
				if = {
					limit = { has_trait = lifestyle_blademaster }
					add_trait_xp = {
						trait = lifestyle_blademaster
						value = 10
					}				
				}
				else = { add_trait = lifestyle_blademaster }

			}
			50 = { add_prowess_skill = 2 }
		}
		stress_impact = {
			lustful = minor_stress_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				add = -50
				has_trait = lustful
			}
		}
	}
}

mz_convert_ongoing.6021 = { #target event - placeholder
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = army_camp }
	right_portrait = { 
		character = scope:target
		animation = happiness
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	immediate = {
		random_list = {
			50 = {
				modifier = { 
					has_trait = lifestyle_blademaster
					has_trait_xp = {
						trait = lifestyle_blademaster
						value >= 100
					}
					add = -50 
				}
				if = {
					limit = { has_trait = lifestyle_blademaster }
					add_trait_xp = {
						trait = lifestyle_blademaster
						value = 10
					}				
				}
				else = { add_trait = lifestyle_blademaster }

			}
			50 = { add_prowess_skill = 2 }
		}
		if = {
			limit = {
				scope:mz_prowess_duel = flag:owner_win
			}
			add_prestige = -150
		}
		else_if = {
			limit = {
				scope:mz_prowess_duel = flag:owner_lose
			}
			add_prestige = 150
		}
	}

	option = { # Prowess conversion success
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.6022
		}
		ai_chance = {
			base = 50
			opinion_modifier = {
				opinion_target = scope:owner
				multiplier = 0.5
				min = -25
			}
			modifier = {
				add = 25
				OR = {
					has_trait = lustful
					has_focus = intrigue_temptation_focus
				}
			}
			modifier = {
				add = 50
				scope:owner = { has_trait = gallant }
			}
			modifier = {
				add = 25
				scope:owner = { has_focus = martial_chivalry_focus }
			}
		}
	}
	option = { # Prowess conversion failure
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.6023
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 25
				has_trait = chaste
			}
			modifier = {
				add = 100
				has_sexuality = asexual
			}
			modifier = {
				add = 25
				has_trait = craven
			}
			modifier = {
				add = 25
				has_trait = paranoid
			}
		}
	}
}

mz_convert_ongoing.6022 = { #schemer event: duel convert success
	type = character_event
	title = mz_convert_ongoing.6020.t
	desc = mz_convert_ongoing.6022.desc

	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = { 
		character = scope:owner
		animation = love
	}
	right_portrait = { 
		character = scope:target
		animation = flirtation
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.6022.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.6023 = { #schemer event: duel convert failure
	type = character_event
	title = mz_convert_ongoing.6020.t
	desc = mz_convert_ongoing.6023.desc

	theme = seduce_scheme
	override_background = { reference = army_camp }
	left_portrait = { 
		character = scope:owner
		animation = shame
	}
	right_portrait = { 
		character = scope:target
		animation = dismissal
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	option = {
		name = mz_convert_ongoing.6023.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

## Both learning - physician
mz_convert_ongoing.6030 = { #schemer event - setup
	type = character_event
	title = mz_convert_ongoing.6030.t
	desc = mz_convert_ongoing.6030.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = root
	right_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:target = {
			learning >= high_skill_rating
		}
		scope:owner = {
			is_landed = yes
			learning >= high_skill_rating
		}
	}

	immediate = {
		scope:owner = {
			capital_province = {
				barony = {
					save_scope_as = court_location
				}
			}
		}
	}

	option = { #Approach subject using jovial and flirty language
		name = mz_convert_ongoing.6030.a
		save_scope_value_as = {
			name = mz_learning_physician
			value = flag:flirty
		}
		random_list = {
			60 = {
				#Success!
				desc = mz_convert_ongoing.6030.a.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				opinion_modifier = {
					who = scope:target
					opinion_target = scope:owner
					multiplier = 0.5
					min = -59
				}
				modifier = {
					add = 30
					scope:target = { 
						OR = {
							has_trait = lustful
							has_focus = intrigue_temptation_focus
						}
					}
				}
				modifier = {
					add = 20
					scope:target = { has_trait = gregarious }
				}
				modifier = {
					add = 20
					has_trait = gregarious
				}
				modifier = {
					add = 30
					has_focus = intrigue_temptation_focus
				}
				modifier = {
					add = 40
					has_trait = seducer
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6030_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6031
						days = { 2 5 }
					}
				}
			}
			40 = {
				#Failure
				desc = mz_convert_ongoing.6030.a.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = chaste }
				}
				modifier = {
					add = 100
					scope:target = { has_sexuality = asexual }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = shy }
				}
				modifier = {
					add = 40
					has_lifestyle = learning_lifestyle
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6030_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6031
						days = { 2 5 }
					}
				}
			}
		}
		stress_impact = {
			lustful = minor_stress_loss
			gregarious = medium_stress_loss
			chaste = minor_stress_gain
			shy = medium_stress_gain
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 60
				OR = {
					has_trait = gregarious
					has_trait = lustful
				}
				ai_rationality > 0
			}
		}
	}
	option = { #Use technical language to disguise approach
		name = mz_convert_ongoing.6030.b
		save_scope_value_as = {
			name = mz_learning_physician
			value = flag:technical
		}
		random_list = {
			60 = {
				#Success!
				desc = mz_convert_ongoing.6030.b.success
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
				}
				compare_modifier = {
					value = learning
					multiplier = 1
				}
				modifier = {
					add = 20
					has_trait = education_learning
				}
				modifier = {
					add = 20
					has_learning_lifestyle_trait_trigger = yes
				}
				modifier = {
					add = 20
					has_focus = learning_medicine_focus
				}
				modifier = {
					add = 20
					OR = {
						has_trait = lifestyle_physician
						has_trait = lifestyle_herbalist
					}
				}
				modifier = {
					add = 40
					scope:target = { 
						OR = {
							has_lifestyle = learning_lifestyle
							has_learning_lifestyle_trait_trigger = yes
						}
					}
				}
				modifier = {
					add = 40
					scope:target = { has_focus = learning_medicine_focus }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = chaste }
				}
				modifier = {
					add = 40
					scope:target = { 
						OR = {
							has_trait = lifestyle_physician
							has_trait = lifestyle_herbalist
						} 
					}
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6030_outcome
					value = flag:success
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6031
						days = { 2 5 }
					}
				}
			}
			40 = {
				#Failure
				desc = mz_convert_ongoing.6030.b.failure
				show_as_tooltip = {
					mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
				}
				min = 5
				modifier = { # You are too distracting for this kind of thing!
					add = {
						value = attraction
						multiply = 1
					}
				}
				modifier = {
					add = 20
					scope:target = { has_trait = lustful }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = impatient }
				}
				modifier = {
					add = 20
					scope:target = { has_focus = intrigue_temptation_focus }
				}
				modifier = {
					add = 20
					scope:target = { has_trait = fickle }
				}
				save_scope_value_as = {
					name = mz_convert_ongoing_6030_outcome
					value = flag:failure
				}
				scope:target = {
					trigger_event = {
						id = mz_convert_ongoing.6031
						days = { 2 5 }
					}
				}
			}
		}
		stress_impact = {
			lustful = minor_stress_gain
			gregarious = medium_stress_gain
			impatient = minor_stress_gain
			chaste = minor_stress_loss
			scholar = minor_stress_loss
			whole_of_body = minor_stress_loss
			lifestyle_herbalist = minor_stress_loss
			lifestyle_physician = minor_stress_loss
			education_learning_1 = medium_stress_loss
			education_learning_2 = medium_stress_loss
			education_learning_3 = medium_stress_loss
			education_learning_4 = medium_stress_loss
		}
		ai_chance = {
			base = 30
			modifier = {
				add = 60
				OR = {
					has_trait = lifestyle_physician
					has_trait = lifestyle_herbalist
					has_focus = learning_medicine_focus
				}
				ai_rationality > 0
			}
		}
	}
	
	option = { #give up
		name = mz_convert_ongoing.6030.c
		custom_tooltip = mz_convert_ongoing_decline_event
		scope:scheme = {
			set_variable = {
				name = mz_convert_declined_milestone_2_event
				value = yes
			}
		}
		stress_impact = {
			impatient = minor_stress_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = impatient
			}
		}
	}
}

mz_convert_ongoing.6031 = { #target event - placeholder
	type = character_event
	title = mz_convert_ongoing.placeholder.t
	desc = mz_convert_ongoing.placeholder.desc
	
	theme = seduce_scheme
	override_background = { reference = study }
	right_portrait = { 
		character = scope:target
		animation = happiness
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = { exists = scope:scheme }

	option = { #flirty success
		trigger = {
			scope:mz_learning_physician = flag:flirty
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6030_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		add_character_modifier = { 
			modifier = mz_discussed_learning_body_modifier
			years = 5
		}
		scope:owner = {
			trigger_event = mz_convert_ongoing.6032
		}
	}
	option = { #flirty failure
		trigger = {
			scope:mz_learning_physician = flag:flirty
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6030_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.6033
		}
	}
	option = { #technical success
		trigger = {
			scope:mz_learning_physician = flag:technical
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6030_outcome = flag:success
			}
		}
		name = mz_convert_ongoing.placeholder.option
		add_learning_lifestyle_xp = major_lifestyle_xp
		scope:owner = {
			trigger_event = mz_convert_ongoing.6034
		}
	}
	option = { #technical failure
		trigger = {
			scope:mz_learning_physician = flag:technical
			OR = {
				is_ai = no
				scope:mz_convert_ongoing_6030_outcome = flag:failure
			}
		}
		name = mz_convert_ongoing.placeholder.option
		scope:owner = {
			trigger_event = mz_convert_ongoing.6035
		}
	}
}

mz_convert_ongoing.6032 = { #schemer event: flirty success
	type = character_event
	title = mz_convert_ongoing.6030.t
	desc = mz_convert_ongoing.6032.desc

	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = flirtation
	}
	right_portrait = { 
		character = scope:target
		animation = happiness
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		add_character_modifier = { 
			modifier = mz_shameless_flirt_modifier
			years = 5
		}
	}

	option = {
		name = mz_convert_ongoing.6032.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.6033 = { #schemer event: flirty failure
	type = character_event
	title = mz_convert_ongoing.6030.t
	desc = mz_convert_ongoing.6033.desc

	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = stress
	}
	right_portrait = { 
		character = scope:target
		animation = disgust
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = disgusted_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.6033.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}

mz_convert_ongoing.6034 = { #schemer event: flirty success
	type = character_event
	title = mz_convert_ongoing.6030.t
	desc = mz_convert_ongoing.6034.desc

	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = personality_bold
	}
	right_portrait = { 
		character = scope:target
		animation = admiration
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		add_learning_lifestyle_xp = major_lifestyle_xp
	}

	option = {
		name = mz_convert_ongoing.6034.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = success }
	}
}

mz_convert_ongoing.6035 = { #schemer event: flirty failure
	type = character_event
	title = mz_convert_ongoing.6030.t
	desc = mz_convert_ongoing.6035.desc

	theme = seduce_scheme
	override_background = { reference = study }
	left_portrait = { 
		character = scope:owner
		animation = shame
	}
	right_portrait = { 
		character = scope:target
		animation = stress
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = { 
			add_opinion = {
				modifier = annoyed_opinion
				target = scope:owner
				opinion = -20
			}
		}
	}

	option = {
		name = mz_convert_ongoing.6035.a
		mz_convert_ongoing_add_scheme_modifier_effect = { MILESTONE = 2 OUTCOME = failure }
	}
}