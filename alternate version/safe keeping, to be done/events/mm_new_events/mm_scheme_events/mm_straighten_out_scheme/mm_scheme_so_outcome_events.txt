#Ongoing events for Straighten Out scheme
namespace = mz_scheme_so_outcome

mz_scheme_so_outcome.1001 = { # Success
	hidden = yes
	trigger = { exists = scope:scheme }

	immediate = {
		if = { 
			limit = {
				NOT = { 
					scope:scheme = { has_variable = mz_scheme_so_num_of_success }
				}
			}
			scope:scheme = {
				set_variable = {
					name = mz_scheme_so_num_of_success
					value = 1
				}
			}
		}
		random = {
			chance = 20
			scope:target = { mz_scheme_so_replace_trait_effect = yes }
			scope:owner = {
				send_interface_message = {
					type = sway_good_message
					title = mz_scheme_so_success_t
					left_icon = scope:target
					scope:target = {
						mz_scheme_so_show_tooltip_effect = yes
						add_opinion = {
							target = scope:owner
							modifier = mz_scheme_straighten_out_opinion
							opinion = -15
						}
					}
				}
			}
			modifier = {
				scope:scheme = { has_variable = mz_scheme_so_num_of_success }
				add = { 
					value = scope:scheme.var:mz_scheme_so_num_of_success
					subtract = 1
					multiply = 20
				} # Each success increases chance of success by 20%
			}
			modifier = {
				add = { value = scope:owner.diplomacy }
			}
			modifier = {
				scope:owner = { has_trait = family_first }
				add = 20
			}
			modifier = {
				scope:owner = { has_focus = diplomacy_family_focus }
				add = 10
			}
			modifier = {
				scope:owner = { has_relation_friend = scope:target }
				NOT = {
					scope:owner = { has_relation_best_friend = scope:target } 
				}
				add = 20
			}
			modifier = {
				scope:owner = { has_relation_best_friend = scope:target }
				add = 40
			}
			modifier = {
				OR = {
					scope:target = { has_trait = stubborn }
					scope:target = { has_trait = arrogant }
				}
				factor = 0.8
			}
			modifier = {
				scope:owner = { has_relation_rival = scope:target }
				factor = 0.6
			}
		}
		if = { # If there's still a negative trait to remove, restart the scheme
			limit = {
				scope:target = { 
					mz_has_valid_negative_trait_trigger = { OWNER = scope:owner }
				}
			}
			scope:scheme = {
				if = {
					limit = { has_variable = mz_scheme_so_num_of_success }
					change_variable = {
						name = mz_scheme_so_num_of_success
						add = 1
					}
				}
				else = {
					set_variable = {
						name = mz_scheme_so_num_of_success
						value = 1
					}					
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = mz_scheme_so_success_continues
					left_icon = scope:target
					scope:scheme = { add_scheme_progress = -10 }
				}				
			}
		}
		else = {
			scope:scheme = { end_scheme = yes } # End scheme if not
		}
	}
}

mz_scheme_so_outcome.1002 = { # Failure
	hidden = yes
	trigger = { exists = scope:scheme }

	immediate = {
		if = {
			limit = {
				scope:target = {
					opinion = {
						target = scope:owner
						value <= -50
					}
				}
			}
			random = {
				chance = 50
				send_interface_message = {
					type = sway_bad_message
					title = mz_scheme_so_failure_t
					left_icon = scope:target
					add_stress = minor_stress_gain
					scope:target = { add_stress = minor_stress_gain }
					scope:scheme = { end_scheme = yes }
					add_opinion = {
						target = scope:owner
						modifier = mz_scheme_straighten_out_blocker_opinion
						opinion = -20
					}
				}
			}
			if = {
				limit = { exists = scope:scheme }
				send_interface_message = {
					type = sway_bad_message
					title = mz_scheme_so_failure_t
					left_icon = scope:target
					add_stress = minor_stress_gain
					scope:target = { add_stress = minor_stress_gain }
					scope:scheme = { add_scheme_progress = -10 }
					scope:target = {
						add_opinion = {
							target = scope:owner
							modifier = mz_scheme_straighten_out_opinion
							opinion = -15
						}
					}
				}
			}
		}
		else = {
			send_interface_message = {
				type = sway_bad_message
				title = mz_scheme_so_failure_t
				left_icon = scope:target
				add_stress = minor_stress_gain
				scope:target = { add_stress = minor_stress_gain }
				if = {
					limit = { exists = scope:scheme }
					scope:scheme = { add_scheme_progress = -10 }
				}
				scope:target = {
					add_opinion = {
						target = scope:owner
						modifier = mz_scheme_straighten_out_opinion
						opinion = -15
					}
				}
			}		
		}
	}
}